{"version":3,"sources":["RoundButton/RoundButton.js","SmartNumber/SmartNumber.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","ExtLink/ExtLink.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","colors.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","ImageButton/ImageButton.js","Tos/Tos.module.scss","CardIconButton/CardIconButton.js","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","SendTxWithBalance/SendTxWithBalance.js","Staking/Staking.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ExecuteTransaction/ExecuteTransaction.js","IconBox/IconBox.js","FlexLoader/FlexLoader.js","AssetField/AssetField.js"],"names":["RoundButton","buttonProps","Object","assign","width","fontSize","fontWeight","height","boxShadow","borderRadius","mainColor","this","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","onClick","handleClick","children","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","style","flexBasis","flex","color","mr","backgroundColor","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","ConnectBox","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","cardProps","mt","name","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","top","zIndex","position","DashboardCard","py","px","transition","isInteractive","cursor","isMobile","overflow","borderTop","concat","theme","colors","divider","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","i","selectedToken","tokenConfig","availableTokens","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","ExtLink","target","rel","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getCurrentNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","exit","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","gradientButton","empty","select","selectDark","input","bg","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","button","ImageButton","image","imageSrc","imageProps","iconName","iconProps","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","CardIconButton","align","useIconOnly","iconColor","iconBgColor","loadField","hashChanged","accountChanged","output","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","Title","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","regenerator_default","checkContractApproved","eventData","eventAction","eventCategory","eventLabel","getTransactionError","sendGoogleAnalyticsEvent","transactionHash","enableERC20","contractInfo","executeTx","_amount","callbackReceipt","params","signedParameters","_params","methodName","methodParams","contractName","normalizeTokenAmount","eventValue","getPermitTransactionParams","signPermit","console","log","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","initContract","abi","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","FastBalanceSelector","onMouseDown","approveDescription","Staking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","selectedOption","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","toggleShowTokenWrapper","showTokenWrapperEnabled","toolProps","contract","updateData","selectedActionChanged","contractApprovedChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","stakedTokensLog","txReceipt","logs","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","loadStats","reduce","_this5","enabled","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","_this6","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","AssetField","selectToken","poolLink","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Link","Icon","Button","customFieldName","customFieldProps","CustomList","rowsPerPage","processedRows","processRows","totalRows","rows","paginationEnabled","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","polygonTransactions","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","polygonTransactionsAvailableTokens","availableTokensChanged","polygonBridgeConfig","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","getPolygonBridgeTxs","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","actionIcon","bridgeType","included","actionIconProps","networkId","avgScore","totalBalanceWithScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","currentNetworkId","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","enabledGovTokens","availableNetworks","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","showTooltip","visible","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","polygonTxs","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","rootToken","childTokenConfig","childToken","encodeParameter","depositData","sendValue","maticPOSClient","exitERC20","encodeAbi","exitCalldata","isETH","contracts","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","events","event","EtherPredicate","raw","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","returnValues","exited","paramIsToken","defaultAction","loadPolygonTxs","isExit","isDeposit","isWithdraw","BuyModal","showInline","availableMethods","buyToken","selectTransaction","ExecuteTransaction","componentProps","sendRawTransaction","exitCallback","getTransactionParamsAsync","getExitTransactionParams","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","loadContracts","validateForm","checkInputs","vesterImplementation","fromBlock","getContractPastEvents","toBlock","proxyCreated","deployedContractsAddresses","implementation","proxy","contractAddress","owner","recipient","vestingPeriod","availableBalance","depositAmounts","totalDeposited","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","encodeParameters","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","WMATIC","ERC20","137","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","useInfuraProvider","RootChainManager","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","42","4","5","1337","80001","isForked","requiredNetwork","blocksPerYear","secondsPerYear","requiredConfirmations","accountBalanceMinimum","enabledNetworks","providers","infura","REACT_APP_INFURA_KEY","rpc","polygon","baseUrl","networkPairs","ens","supportedNetworks","covalent","REACT_APP_COVALENT_KEY","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","polygonBridge","subComponent","StateSender","ChildERC20","stake","LpStaking","SushiLiquidityPool","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","replaceArrayProps","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","getCurrentNetworkId","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getBaseToken","networkConfig","defaultNetwork","current","_callee17","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","last_state_id","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args17","_context17","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","result","_ref19","ethereumTx","stateSenderLog","tx_state_id","getTxReceipt","web3Infura","hexToNumberString","_ref20","_callee13","_context13","_ref21","_callee14","_context14","_ref22","_callee15","_context15","_x9","items","to_address","_ref23","_callee16","polygonTx","_context16","normalizePolygonTx","_x10","getPolygonBaseTxs","_callee18","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args18","_context18","getCachedRequest","block_height","filterPolygonTxs","toConsumableArray","tx_hash","saveFetchedTxs","getEtherscanBaseTxs","_callee19","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args19","_context19","filterEthereumTxs","saveFetchedTransactions","_callee20","_args20","_context20","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee21","resultData","_resultData","allAvailableTokens","_args21","_context21","processStoredTxs","t1","_callee22","contractInstance","_context22","web3Polygon","Contract","constant","outputs","payable","stateMutability","lastStateId","call","checkPolygonTransactionIncluded","_ref29","_callee23","_ref30","_ref31","_context23","getTransactionReceipt","_x11","_ref32","_callee24","_args24","_context24","_x12","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref33","_callee25","processTransactions","idleTokensAddresses","_args25","_context25","mappedTx","_x13","_x14","_ref34","_callee26","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x15","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref35","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenAddress","_ref36","_callee30","minedTxs","_context30","_ref37","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","_ref38","_callee27","_context27","_x20","_x21","baseTokensConfig","t2","_ref39","_callee28","_context28","_x22","_x23","_x18","_x19","_x17","_x16","_ref40","_callee37","txsToProcess","_args37","_context37","_ref41","_callee36","_context36","_ref42","_callee35","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref43","_callee32","_context32","_x28","_x29","_ref44","_callee33","_context33","_x30","_x31","_ref45","_callee34","_context34","_x32","_x33","decodeLog","_token","_x26","_x27","_x25","_x24","alias","getCustomAddress","setCustomAddress","customAddress","_ref46","_callee38","error_callback","_args38","_context38","catch","_x34","_ref47","_callee39","apiKeyIndex","_args39","_context39","_x35","_ref48","_callee40","return_data","_args40","_context40","_x36","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee41","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref50","_callee43","googleEventsInfo","originOk","_args43","_context43","_ref51","_callee42","_context42","hitCallback","hitCallbackFail","_x38","_x39","_x37","createContract","_ref52","_callee44","web3Provider","_args44","_context44","_x40","_x41","_x42","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","defaultUrl","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee47","activeOnly","validProposals","_args47","_context47","addr","msg","_ref54","_callee46","checkedStrategies","_context46","metadata","_ref55","_callee45","_context45","symbol","_x44","_x43","_ref56","_callee48","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","_x45","_ref57","_callee49","_context49","_x46","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee50","contractPaused","_args50","_context50","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref59","_callee52","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context52","lastAllocationsPromise","_ref60","_callee51","lastAllocations","_context51","_x48","_x49","alloc","_x47","checkMigration","_ref61","_callee53","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context53","getContractBalance","_x50","_x51","getContractEvents","_ref62","_callee54","eventName","_args54","_context54","_x52","_x53","estimateMethodGasUsage","_ref63","_callee55","_contract$methods","functionCall","gasLimit","_ref64","_ref65","_args55","_context55","getGasPrice","estimateGas","_x54","_x55","_ref66","_callee56","callback_receipt","_contract$methods2","_context56","once","confirmationNumber","receipt","_x56","_x57","_x58","_x59","_x60","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref67","_callee57","biconomyInfo","res","_context57","x-api-key","_x61","sendTxWithPermit","_ref68","_callee58","_contract$methods3","messageToSign","_this$getSignaturePar","_context58","encodeABI","_address","personal","sign","_x62","_x63","_x64","_x65","_x66","_x67","buildBiconomyErc20ForwarderTx","_ref69","_callee59","tokenAddress","callData","_context59","erc20ForwarderClient","buildTx","txGas","_x68","_x69","_x70","_x71","_x72","sendBiconomyTxWithErc20Forwarder","_ref70","_callee60","req","metaInfo","txResponse","fetchReceiptIntervalId","_context60","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x73","_x74","_x75","_x76","sendBiconomyTxWithPersonalSign","_ref71","_callee61","_this$getSignaturePar2","_context61","getNonce","_x77","_x78","_x79","_x80","signPermitEIP2612","_ref72","_callee62","erc20Name","spender","deadline","domain","domainData","_context62","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x81","_x82","_x83","_x84","_x85","_x86","_x87","_x88","_ref73","_callee63","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args63","_context63","net","getId","allowed","response","_x89","_x90","_x91","_ref74","_callee64","permitParams","methodAbi","useNonce","_args64","_context64","_jsonInterface","f","unshift","_x92","_x93","_x94","_x95","_x96","_x97","_x98","sendSignedTx","_ref75","_callee65","MetaTransaction","dataToSign","_context65","_x99","_x100","_x101","_x102","_x103","_ref76","_callee66","contractAddr","walletAddr","_ref77","_ref78","allowance","_context66","getAllowance","_x104","_x105","_x106","_ref79","_callee67","_context67","_x107","_x108","_x109","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","loadAssetField","_ref80","_callee68","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref81","_ref82","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref83","_ref84","amountLentCurve1","redeemableBalanceCurve","_ref85","_ref86","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref87","_ref88","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref89","_ref90","tokenPriceFirstDeposit","_ref91","_ref92","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref93","_ref94","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref95","_ref96","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref97","_ref98","amountLentCurve2","redeemableBalanceCurve1","_ref99","_ref100","redeemableBalance2","_args68","_context68","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x110","_x111","_x112","_x113","getIdleTokenSupply","_ref101","_callee69","idleTokenSupply","_args69","_context69","_x114","getIdleTokenPriceWithFee","_ref102","_callee70","_ref103","_ref104","priceWFee","_args70","_context70","eq","_x115","_x116","_ref105","_callee71","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args71","_context71","_x117","clearCachedData","useLocalStorage","_ref106","_callee72","_ref107","_ref108","idleTokensTotalSupply","userShare","_context72","_x118","_x119","_callee74","_args74","_context74","_ref110","_callee73","coverageTokens","protocolImage","_context73","_x120","_ref111","_callee75","_context75","_x121","_callee77","filter_by_status","_args77","_context77","_ref113","_callee76","_ref114","_ref115","_context76","cachedContractCall","_x122","_ref116","_callee78","fixDecimals","_args78","_context78","_x123","_ref117","_callee79","_ref118","_ref119","_args79","_context79","_x124","_x125","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","getTokenTotalSupply","_ref120","_callee80","totalSupply","_args80","_context80","_x126","_ref121","_callee81","_args81","_context81","_x127","_x128","getProtocolBalance","_ref122","_callee82","_context82","_x129","_x130","getAprs","_ref123","_callee83","_context83","addresses","_x131","genericIdleCall","_ref124","_callee84","callParams","_args84","_context84","_x132","_ref125","_callee85","_contract$methods4","_args85","_context85","_x133","_x134","_ref126","_callee87","_args87","_context87","_ref127","_callee86","_context86","_x136","_x137","_x135","getTxDecodedLogs","_ref128","_callee89","logAddr","decodeLogs","internalTransfers","_context89","_ref129","_callee88","_context88","_x142","_x143","_x138","_x139","_x140","_x141","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee90","_context90","_ref131","_callee91","_args91","_context91","getPastEvents","_x144","_x145","_ref132","_callee92","_args92","_context92","_x146","_x147","_ref133","_callee93","_contract$methods5","_args93","_context93","_x148","_x149","_ref134","_callee94","_args94","_context94","_x150","_x151","apr2apy","getUnlentBalance","_ref135","_callee95","unlentBalance","_context95","_x152","_ref136","_callee96","_args96","_context96","_x153","_ref137","_callee98","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args98","_context98","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref138","_callee97","_ref139","_ref140","protocolBalance","protocolAllocation","_context97","_x155","_x156","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x154","getUniswapConversionRate_path","_ref141","_callee99","unires","_context99","_x157","_ref142","_callee100","pairAddresses","_ref143","_ref144","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref145","_ref146","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context100","_x158","_x159","_ref147","_callee101","tokenConfigFrom","tokenConfigDest","WETHAddr","_context101","_x160","_x161","_ref148","_callee102","_context102","_x162","_x163","getCurveDepositedTokens","_ref149","_callee103","idleTokensBalances","remainingCurveTokens","_args103","_context103","_x164","getCurveUnevenTokenAmounts","_ref150","_callee104","amounts","max_burn_amount","unevenAmounts","_context104","getCurveDepositContract","_x165","_x166","_callee105","curveRatesInfo","_context105","strategyTokens","getCurveAPYContract","_callee106","blocksForPrevTokenPrice","_ref153","_ref154","prevTokenPrice","blocksMultiplier","curveAPR","_context106","getCurveTokenSupply","_callee107","_context107","getCurvePoolContract","_callee108","_args108","_context108","_callee109","_args109","_context109","_ref158","_callee110","_ref159","_ref160","_context110","_x167","_callee111","depositContractInfo","_context111","getCurveZapContract","_callee112","zapContractInfo","_context112","_callee113","poolContractInfo","_context113","getCurveSwapContract","_callee114","_context114","getCurveIdleTokensAmounts","_callee116","max_slippage","curveTokenSupply","curveTokenShare","_args116","_context116","_ref166","_callee115","curveIdleTokens","_context115","_x168","getCurveTokensAmounts","_callee118","useCoinIndex","_args118","_context118","_ref168","_callee117","_ref169","_ref170","totalTokenSupply","_context117","_x169","getCurveAmounts","_ref171","_callee120","_args120","_context120","_ref172","_callee119","_context119","_x172","_x170","_x171","getCurveTokenAmount","_ref173","_callee121","_args121","_context121","_x173","getCurveSlippage","_ref174","_callee122","uneven_amounts","_ref175","_ref176","virtualPrice","Sv","_args122","_context122","_x174","_x175","_ref177","_callee123","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref178","_ref179","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args123","_context123","IAaveIncentivesController","emissionPerSecond","_x176","_callee125","_args125","_context125","_ref181","_callee124","_ref182","_ref183","_context124","_x177","getWMaticApr","_ref184","_callee126","maticConversionRate","wMaticTokenConfig","wMaticApr","wMaticValue","_args126","_context126","_x178","_x179","getStkAaveApr","_ref185","_callee127","aaveConversionRate","stkAaveAPR","stkAaveValue","_args127","_context127","_x180","_x181","getCompAPR","_ref186","_callee128","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args128","_context128","_x182","_x183","getCompSpeed","_ref187","_callee129","cTokenAddress","compSpeed","_context129","_x184","_ref188","_callee130","cTokenInfo","compoundAllocationPerc","_ref189","_ref190","cTokenTotalSupply","compoundPoolShare","_args130","_context130","_x185","_callee132","_args132","_context132","_ref192","_callee131","_ref193","_ref194","_context131","_x186","_callee134","_args134","_context134","_ref196","_callee133","_ref197","_ref198","compApr","_context133","_x187","getTokensCsv","_callee137","csv","_context137","prototype","sum","pv","cv","avg","_ref200","_callee136","_context136","_ref201","_callee135","header","aprAvg","scoreAvg","lastRow","_context135","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x189","_x188","_callee139","_args139","_context139","_ref203","_callee138","compTokenBalance","_context138","_x190","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref204","_callee141","govTokensUserDistribution","_args141","_context141","_ref205","_callee140","_context140","_x192","_x191","getGovTokensDistributionSpeed","_ref206","_callee143","govTokensDistribution","tokenGovTokens","_args143","_context143","_ref207","_callee142","govSpeed","_context142","_x194","_x193","getGovTokensAprs","_ref208","_callee145","govTokensAprs","_args145","_context145","_ref209","_callee144","_ref210","_ref211","_ref212","_ref213","cTokenConfig","_context144","_x197","_x195","_x196","_callee147","_args147","_context147","_ref215","_callee146","tokenConversionRate","fromTokenConfig","_context146","_x198","getGovTokenConfigByAddress","_callee148","checkShowBalance","govTokensEarnings","_args148","_context148","govTokenAmount","getGovTokensIndexes","_ref217","_callee150","govTokensAmounts","_context150","_ref218","_callee149","govTokenIndex","govTokenAddress","_context149","_x201","_x202","_x199","_x200","_callee153","govTokenConfigForced","_args153","_context153","_ref220","_callee152","idleTokenConfig","_context152","_ref221","_callee151","_context151","_x204","_x205","_x203","getTokenFees","_callee154","_args154","_context154","_callee155","_ref224","_ref225","gain","fees","_args155","_context155","_ref226","_callee156","_args156","_context156","_x206","getTotalTVL","_callee157","tokensTVL","_context157","getTokensTVL","totalTVL","tokenTVL","_callee161","_context161","_ref229","_callee160","_context160","_ref230","_callee159","oldTokenTVL","idleTokenName","_ref231","_ref232","oldTokenConfig","_ref236","_ref237","oldTokenPrice","oldTotalSupply","_context159","_ref233","_callee158","_ref234","_ref235","govTokenConversionRate","govTokenBalanceConverted","_context158","_x209","oldProtocols","oldProtocol","protocolPos","_x208","_x207","getSubstackLatestFeed","_callee162","endpointInfo","idleSubstackFeed","latestFeed","_context162","getAggregatedStats","_callee163","totalAUM","_args163","_context163","getAggregatedStats_chain","_callee167","avgAPR","_args167","_context167","_ref241","_callee166","_context166","_ref242","_callee165","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context165","_ref243","_callee164","_ref244","_ref245","_context164","_x212","_x211","_x210","getTokenApy","_ref246","_callee168","_context168","_x213","_callee171","_args171","_context171","_ref248","_callee170","_context170","_ref249","_callee169","_ref250","_context169","_x215","_x214","getProtocolsTokensBalances","_callee173","tokenBalances","minTokenBalance","protocolsTokens","_args173","_context173","_ref252","_callee172","tokenContract","_context172","_x216","_ref253","_callee174","_args174","_context174","_x217","_x218","_x219","getAvgAPYStats","_ref254","_callee175","apiResults","_args175","_context175","_x220","_x221","_ref255","_callee176","_conversionRate","ToTokenConfig","_args176","_context176","_x222","_x223","_ref256","_callee177","_ref257","_ref258","_context177","protocolScore","getTokenScoreApi","_x224","_x225","_ref259","_callee178","_context178","_x226","_x227","_ref260","_callee181","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args181","_context181","_ref261","_callee180","addrIndex","protocolApr","protocolApy","govTokenAPR","_context180","_ref262","_callee179","_context179","_x231","_x229","_x230","_x228","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","closeModal","goBack","resetModal","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","Tos","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","ModalCard","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","checkNetwork","accountBalanceToken","checkPreflight","networkInitialized","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","initContractCustomProvider","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","setNetwork","metamaskProvider","web3RpcKey","web3Rpc","web3InfuraRpc","connectorNameChanged","web3Host","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref11","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkType","getNetworkName","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","transactionHashCallback","errorCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","sendTransaction","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","_ref28","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","anonymous","indexed","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","_args","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","txStatus","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","add","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.c7f8e87e.chunk.js","sourcesContent":["import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled && typeof this.props.getPermitTransactionParams === 'function'){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, this.props.contractInfo.name);\n      console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams,\n        contractName\n      } = params;\n\n      const value = params.value || null;\n      contractName = contractName || this.props.contractInfo.name;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (this.props.contractInfo.address){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      // console.log('contractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass Staking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.setState({\n          tokenWrapperProps:null,\n          showTokenWrapperEnabled:false\n        },() => {\n          this.updateData(selectedActionChanged);\n        });\n      }\n    }\n\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.state.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.state.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.state.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.state.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    /*\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n        break;\n        case 'Withdraw':\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      inputValue,\n      balanceSelectorInfo\n    });\n    */\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.state.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.state.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.state.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.state.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.state.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedAction = 'Stake';\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.state.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.state.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.state.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.state.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.state.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.state.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.state.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.state.contractInfo.maxBonusDays} days to achieve a ${this.state.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.state.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.state.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  toggleShowTokenWrapper = showTokenWrapperEnabled => {\n    this.setState({\n      showTokenWrapperEnabled\n    });\n  }\n\n  selectToken(selectedOption){\n    const selectedToken = selectedOption.value;\n    this.setState({\n      selectedToken,\n      selectedOption\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.tokenConfig && this.state.tokenConfig.poolLink && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Pool link:\n                          </Text>\n                          <ExtLink\n                            mt={1}\n                            color={'link'}\n                            hoverColor={'link'}\n                            href={this.state.tokenConfig.poolLink}\n                          >\n                            <Text\n                              color={'link'}\n                              style={{\n                                maxWidth:'100%',\n                                overflow:'hidden',\n                                whiteSpace:'nowrap',\n                                textOverflow:'ellipsis'\n                              }}\n                            >\n                              {this.state.tokenConfig.poolLink}\n                            </Text>\n                          </ExtLink>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Your Stats:\n                          </Text>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              this.state.globalStats.map( (statInfo,index) =>\n                                <StatsCard\n                                  key={`globalStats_${index}`}\n                                  cardProps={{\n                                    mb:[2,0],\n                                    mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                                    width:[1,'100%']\n                                  }}\n                                  textProps={{\n                                    fontSize:[1,2]\n                                  }}\n                                  {...statInfo}\n                                />\n                              )\n                            }\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stake'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'stake LP Tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStake}\n                              handleClick={ e => this.setAction('Stake') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isUnstake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Withdraw'}\n                              imageSrc={'images/upload.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'withdraw LP tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isUnstake}\n                              handleClick={ e => this.setAction('Withdraw') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStats ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stats'}\n                              imageSrc={'images/stats.svg'}\n                              // subcaption={'view some stats'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStats}\n                              handleClick={ e => this.setAction('Stats') }\n                            />\n                          </Flex>\n                          {\n                            /*\n                            this.state.tokenWrapperProps && (\n                              <Flex\n                                mt={1}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                mb={this.state.showTokenWrapperEnabled ? 0 : 3}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    pb:2,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showTokenWrapperEnabled}\n                                      onChange={ e => this.toggleShowTokenWrapper(e.target.checked) }\n                                      label={ isStake ? `Convert your ${this.state.tokenWrapperProps.startContract.token} to ${this.state.tokenWrapperProps.destContract.token}` : `Convert your ${this.state.tokenWrapperProps.destContract.token} to ${this.state.tokenWrapperProps.startContract.token}`}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                              </Flex>\n                            )\n                            */\n                          }\n                          {\n                            (isStake || isUnstake) ?\n                              /*\n                              this.state.showTokenWrapperEnabled && this.state.tokenWrapperProps ? (\n                                <TokenWrapper\n                                  {...this.props}\n                                  fullWidth={true}\n                                  action={ isStake ? 'wrap' : 'unwrap' }\n                                  toolProps={this.state.tokenWrapperProps}\n                                />\n                              ) :\n                              */\n                              (this.state.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.state.contractInfo ? (\n                                <Box\n                                  mt={1}\n                                  width={1}\n                                  mb={[4,3]}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={txAction}\n                                    error={this.state.error}\n                                    steps={this.state.steps}\n                                    infoBox={this.state.infoBox}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.balanceProp}\n                                    contractInfo={this.state.contractInfo}\n                                    permitEnabled={this.state.permitEnabled}\n                                    approveEnabled={this.state.approveEnabled}\n                                    callback={this.transactionSucceeded.bind(this)}\n                                    approveDescription={this.state.approveDescription}\n                                    contractApproved={this.contractApproved.bind(this)}\n                                    balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                    changeInputCallback={this.changeInputCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                          size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                        />\n                                        <Text\n                                          mt={1}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          {\n                                            isStake ? (\n                                              `You don't have any ${this.state.selectedToken} in your wallet.`\n                                            ) : isUnstake && (\n                                              `You don't have any staked ${this.state.selectedToken} to withdraw.`\n                                            )\n                                          }\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Box>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection:'row'\n                                    }}\n                                    loaderProps={{\n                                      size:'30px'\n                                    }}\n                                    textProps={{\n                                      ml:2\n                                    }}\n                                    text={'Loading info...'}\n                                  />\n                                </Flex>\n                              )\n                            ) : isStats && (\n                              <Flex\n                                mt={1}\n                                mb={3}\n                                width={1}\n                                style={{\n                                  flexWrap:'wrap'\n                                }}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  (!this.state.stats || !this.state.stats.length) ? (\n                                    <Flex\n                                      mt={3}\n                                      mb={3}\n                                      width={1}\n                                    >\n                                      <FlexLoader\n                                        flexProps={{\n                                          flexDirection:'row'\n                                        }}\n                                        loaderProps={{\n                                          size:'30px'\n                                        }}\n                                        textProps={{\n                                          ml:2\n                                        }}\n                                        text={'Loading stats...'}\n                                      />\n                                    </Flex>\n                                  ) : this.state.stats.map( (statInfo,index) =>\n                                    <StatsCard\n                                      key={`stats_${index}`}\n                                      cardProps={{\n                                        width:[1,'49%']\n                                      }}\n                                      {...statInfo}\n                                    />\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    polygonTransactions:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n    polygonTransactionsAvailableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio,\n        polygonTransactions\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Get Polygon deposits\n        polygonBridgeConfig.enabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.polygonTransactions = polygonTransactions && polygonTransactions.length>0 ? polygonTransactions : null;\n      if (newState.polygonTransactions){\n        newState.polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n          let actionIcon = null;\n          switch (tx.action){\n            default:\n            case 'Deposit':\n              actionIcon = 'ArrowDownward';\n            break;\n            case 'Withdraw':\n              actionIcon = 'ArrowUpward';\n            break;\n            case 'Exit':\n              actionIcon = 'Undo';\n            break;\n          }\n          const depositInfo = {\n            actionIcon,\n            amount:tx.value,\n            token:tx.tokenSymbol,\n            action:tx.action.toUpperCase(),\n            bridgeType:tx.bridgeType.toUpperCase(),\n            status:tx.included ? 'Completed' : 'pending',\n            hash:this.functionsUtil.shortenHash(tx.hash),\n            statusIcon:tx.included ? 'Done' : 'Timelapse',\n            actionIconProps:{\n              color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n              bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n            },\n            url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n            date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n            statusIconProps:{\n              color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n            },\n            tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n          };\n          return depositInfo;\n        });\n      }\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    const currentNetworkId = currentNetwork.id;\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n    const enabledGovTokens = Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(currentNetworkId)) );\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && enabledGovTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={enabledGovTokens}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.polygonTransactions && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <Title my={[3,4]}>Polygon Bridge Transactions</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <CustomList\n                        paginationEnabled={true}\n                        handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n                        cols={[\n                          {\n                            title:'HASH',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.18],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'bgIcon',\n                                path:['actionIcon'],\n                              },\n                              {\n                                type:'text',\n                                path:['hash'],\n                                props:{\n                                  ml:[0,2]\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'ACTION',\n                            props:{\n                              width:[0.25,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['action'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'DATE',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['date'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'BRIDGE',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.12],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['bridgeType'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'AMOUNT',\n                            props:{\n                              width:[0.25, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['amount'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.25,0.13]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['tokenIcon'],\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','1.6em']\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                              }\n                            ]\n                          },\n                        ]}\n                        {...this.props}\n                        rows={this.state.polygonTransactionsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getCurrentNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                this.state.deployedContracts.length>0 ?\n                  this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ).map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                this.state.deployedContracts.length>0 ?\n                  this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ).map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        Nothing to Claim yet.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport LpStaking from '../contracts/LpStaking.json';\nimport B2BVester from '../contracts/B2BVester.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\n// import DummyERC20 from '../abis/polygon/DummyERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      availableNetworks:[1,42,1337],\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      availableNetworks:[1,42,1337],\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[1,42,1337],\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    }\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      availableNetworks:[1,5,42,137,80001],\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      availableNetworks:[1,42],\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      availableNetworks:[1,42],\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    availableNetworks:[1,42],\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan'\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      137:{\n        name:'Matic',\n        version:'v1',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n      },\n      5:{\n        name:'Goerli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon'\n      }\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    enabledNetworks:[1,42,1337,5,137,80001],\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        key:env.REACT_APP_ETHERSCAN_KEY,\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].name.toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      subComponent:PolygonBridge,\n      availableNetworks:[1,5,137,80001],\n      label:'Ethereum <> Polygon Bridge',\n      image:'images/protocols/polygon.svg',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:null,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:null,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          }\n        }\n      }\n    },\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'LP Staking',\n      route:'lp-staking',\n      subComponent:Staking,\n      availableNetworks:[1],\n      desc:'Stake your Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          SLP:{\n            contract:{\n              decimals:24,\n              abi:LpStaking,\n              name:'LpStaking',\n              maxMultiplier:3,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n              // address:'0x95274E30C33083F3E3fEA9454347b9BD59e85225' // Fork\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:false,\n      visible:false,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      availableNetworks:[1],\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      icon:'FileDownload',\n      depositEnabled:false,\n      availableNetworks:[1],\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      route:'convert',\n      icon:'SwapHoriz',\n      availableNetworks:[1],\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      availableNetworks:[1],\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      availableNetworks:[1,5,42],\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC','MATIC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR','MATIC'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','MATIC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getCurrentNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const currentNetworkId = this.getCurrentNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getCurrentNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTxs(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getCurrentNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    // if (tokenSymbol === 'USDC'){\n    //   debugger;\n    // }\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEthereumTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getCurrentNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // console.log('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // console.log('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // console.log('processStoredTxs',txHash,realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      // console.log('makeEtherscanApiRequest - AGAIN - ',endpoint,apiKeyIndex+1);\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].name;\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi, web3Provider=null) => {\n    web3Provider = web3Provider || this.props.web3;\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getCurrentNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getCurrentNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getCurrentNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getCurrentNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n          case 'WMATIC':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n          case 'WMATIC':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getCurrentNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.cachedContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.cachedContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.cachedContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenTotalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    if (!this.BNify(totalSupply).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n    }\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n    const cachedDataKey = `cachedContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution_2',aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution_3',IAaveIncentivesController_name,aTokenTotalSupply,assetData,tokenAllocation);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution_4',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getCurrentNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n        case 'WMATIC':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n        case 'WMATIC':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              case 'WMATIC':\n                govTokenAPR = await this.getWMaticApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have enough ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.SafeAppConnector = SafeAppConnector;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async isSafeApp() {\n    if (this.provider){\n      return await this.provider.isSafeApp();\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      chainId: defaultNetwork, // default: 1\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  maticPOSClient :{},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  checkNetwork: () => {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  networkInitialized:false,\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  initContractCustomProvider: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.functionsUtil.removeStoredItem('cachedRequests');\n        this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n        this.functionsUtil.removeStoredItem('transactions');\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network) && this.state.network.current.id;\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n    const networkConfig = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3Rpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3Rpc;\n        forceCallback = true;\n      }\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              web3Polygon,\n              permitClient,\n              maticPOSClient,\n              maticPlasmaClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                web3Polygon,\n                maticPOSClient,\n                biconomy:false,\n                maticPlasmaClient\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            web3Polygon,\n            maticPOSClient,\n            biconomy:false,\n            maticPlasmaClient\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n          web3Polygon,\n          maticPOSClient,\n          maticPlasmaClient\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractCustomProvider = async (name, address, abi, web3Provider) => {\n    web3Provider = web3Provider || this.state.web3;\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        console.log('wallets',wallets);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].name.toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.current.id]);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        const useInfuraProvider = !!contractInfo.useInfuraProvider;\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n\n    return {\n      id: networkId,\n      name: networkName\n    };\n  }\n\n  getNetworkId = async () => {\n\n    if (!this.state.web3){\n      return {};\n    }\n\n    const networkId = await this.state.web3.eth.net.getId();\n    const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await this.state.web3.eth.net.getNetworkType();\n\n    return {\n      id:networkId,\n      name:networkName\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = {...this.state.network};\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getNetworkId();\n    network.isCorrectNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n    const networkInitialized = !!network.current.id;\n\n\n    if (!this.state.network.current.id || network.current.id !== this.state.network.current.id || !this.state.networkInitialized){\n      // console.log('checkNetwork',network);\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null, send_raw=false, raw_tx_data=null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    if (typeof contract.methods[contractMethod] === 'undefined'){\n      if (typeof callback === 'function') {\n        callback(null,'method_not_found');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      const transactionHashCallback = hash => {\n        this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n        if (!hash){\n          this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n          return false;\n        }\n\n        transaction.transactionHash = hash;\n        transaction.status = \"pending\";\n        transaction.recentEvent = \"transactionHash\";\n        this.updateTransaction(transaction);\n\n        if (callback_receipt){\n          callback_receipt(transaction);\n        }\n\n        // Wait for manual confirmation only for mobile\n        if (this.props.isMobile){\n          if (manualConfirmationTimeoutId){\n            window.clearTimeout(manualConfirmationTimeoutId);\n          }\n          manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n        }\n      };\n\n      const errorCallback = error => {\n        console.log('Tx error',error);\n        \n        const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n        \n        // Set error on transaction\n        transaction.status = \"error\";\n        transaction.recentEvent = \"error\";\n        this.updateTransaction(transaction);\n\n\n        // Show ToastProvider\n        if (!isDeniedTx){\n          window.toastProvider.addMessage(\"Something went wrong\", {\n            icon: 'Block',\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\",\n            colorTheme: 'light',\n            secondaryMessage: \"Please retry\",\n          });\n\n          const isError = error instanceof Error;\n\n          if (typeof error.message !== 'undefined'){\n            this.openTransactionErrorModal(null,error.message);\n          } else if (this.functionsUtil.checkUrlOrigin() && isError){\n            Sentry.captureException(error);\n          }\n        }\n\n        if (typeof callback === 'function') {\n          callback(transaction,error);\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      // console.log('send_raw',send_raw,{\n      //   from:account,\n      //   data:raw_tx_data,\n      //   to:contract._address\n      // });\n      if (send_raw && raw_tx_data){\n        return this.state.web3.eth.sendTransaction({\n            from:account,\n            data:raw_tx_data,\n            to:contract._address\n          })\n          .on(\"transactionHash\", transactionHashCallback)\n          .on(\"receipt\", receiptCallback)\n          .on(\"confirmation\", confirmationCallback)\n          .on(\"error\", errorCallback);\n      } else {\n        // estimate gas price\n        let gas = await contract.methods[contractMethod](...params)\n          .estimateGas(value ? { from: account, value } : { from: account })\n          .catch(e => console.error(e));\n\n        if (gas) {\n          gas = this.functionsUtil.BNify(gas);\n          gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n          // Check if gas is under the gasLimit param\n          if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n            gas = this.functionsUtil.BNify(gasLimit);\n          }\n\n          // Convert gasLimit toBN with web3 utils\n          gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n        }\n\n        return contract.methods[contractMethod](...params)\n          .send(value ? { from: account, value, gas } : { from: account, gas })\n          .on(\"transactionHash\", transactionHashCallback)\n          .on(\"receipt\", receiptCallback)\n          .on(\"confirmation\", confirmationCallback)\n          .on(\"error\", errorCallback);\n      }\n\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.state.network.current.id;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Polygon:null,\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    networkInitialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    checkNetwork: this.checkNetwork,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    initContractCustomProvider: this.initContractCustomProvider,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('CACHE DATA',key,Date.now());\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        maticPOSClient,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      web3Infura={web3Infura}\n                                      web3Polygon={web3Polygon}\n                                      initAccount={initAccount}\n                                      checkNetwork={checkNetwork}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      maticPOSClient={maticPOSClient}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      networkInitialized={networkInitialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      initContractCustomProvider={initContractCustomProvider}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          web3Infura={web3Infura}\n                                          web3Polygon={web3Polygon}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          checkNetwork={checkNetwork}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          networkInitialized={networkInitialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? <Text {...fieldProps}>-</Text> : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}