{"version":3,"sources":["ImageButton/ImageButton.js","TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","CardIconButton/CardIconButton.js","TrancheField/TrancheField.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","AssetSelector/AssetSelector.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","DashboardCard/DashboardCard.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","CustomList/CustomList.js","AssetsList/AssetsList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","RoundButton/RoundButton.js","Title/Title.js","ExtLink/ExtLink.js","AssetField/AssetField.js"],"names":["ImageButton","isMobile","this","props","image","imageSrc","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","src","imageProps","iconName","name","iconProps","caption","textAlign","fontSize","fontWeight","color","borderRadius","px","py","my","mx","onClick","handleClick","height","mainColor","isActive","contrastColor","style","buttonStyle","justifyContent","buttonProps","Fragment","badge","position","backgroundColor","bgColor","right","top","text","flexDirection","alignItems","mr","captionPos","subcaption","split","map","v","i","key","concat","lineHeight","Component","module","exports","trancheFlash","mobile","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","ml","hoverColor","path","index","link","pathLink","Link","Text","pl","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","left","data","itemPos","xFormatted","mb","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","CardIconButton","isInteractive","isDisabled","align","useIconOnly","iconColor","isSidebar","iconBgColor","actionBg","redeem","textProps","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","trancheDetails","rgb","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","hashChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","baseToken","symbol","blockExplorerUrls","method","networkId","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","required","current","getPolygonBridgeTxs","_callee28","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref34","_ref35","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args28","_context28","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref36","_callee23","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context23","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x25","_ref37","_callee24","_context24","_x26","match","_ref38","_callee25","_context25","_x27","_ref39","_callee26","_context26","_x28","items","to_address","_ref40","_callee27","polygonTx","_context27","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x29","sort","getPolygonBaseTxs","_callee29","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args29","_context29","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","getEtherscanBaseTxs","_callee30","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args30","_context30","filterEthereumTxs","_callee31","_args31","_context31","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee32","resultData","_resultData","allAvailableTokens","_args32","_context32","processStoredTxs","t1","_callee33","contractInstance","_context33","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref46","_callee34","_ref47","_ref48","_context34","getTransactionReceipt","_x30","_ref49","_callee35","_args35","_context35","_x31","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref50","_callee36","processTransactions","idleTokensAddresses","_args36","_context36","mappedTx","_x32","_x33","filterEtherscanTxs","_ref51","_callee37","processTxs","_args37","_context37","_x34","_ref52","_callee38","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args38","_context38","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x35","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref53","_callee43","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args43","_context43","baseTokenConfig","baseTokenAddress","_ref54","_callee42","minedTxs","_context42","_ref55","_callee41","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context41","getCurveTokenPrice","_ref56","_callee39","_context39","_x40","_x41","baseTokensConfig","t2","_ref57","_callee40","_context40","_x42","_x43","_x38","_x39","_x37","_x36","_ref58","_callee49","txsToProcess","_args49","_context49","_ref59","_callee48","_context48","_ref60","_callee47","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context47","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref61","_callee44","_context44","_x48","_x49","_ref62","_callee45","_context45","_x50","_x51","oldContract","raw","_ref63","_callee46","_context46","_x52","_x53","abi","decodeLog","_token","_x46","_x47","_x45","_x44","alias","getCustomAddress","setCustomAddress","customAddress","_ref64","_callee50","error_callback","config","_args50","_context50","catch","_x54","_ref65","_callee51","apiKeyIndex","apiKey","_args51","_context51","_x55","_ref66","_callee52","return_data","_args52","_context52","_x56","code","errorCode","array","prop","shift","configs","getAppUrl","baseURL","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee53","page","googlePageviewInfo","isOrigin","_args53","_context53","ga","_ref68","_callee55","googleEventsInfo","debugEnabled","originOk","_args55","_context55","addPostfixForTestnet","availableNetworks","_ref69","_callee54","_context54","hitCallback","hitCallbackFail","_x58","_x59","_x57","createContract","_ref70","_callee56","_context56","_x60","_x61","_x62","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee59","activeOnly","whitelist","proposals","currTime","validProposals","_args59","_context59","addr","msg","payload","_ref72","_callee58","checkedStrategies","_context58","snapshot","metadata","strategies","_ref73","_callee57","_context57","_x64","_x63","_ref74","_callee60","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args60","_context60","_x65","getTokenExchangeRate","_ref75","_callee61","exchangeRateParams","exchangeRate","_context61","_x66","_x67","getTokenDecimals","_ref76","_callee62","_context62","_x68","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee63","idleTokenConfig","feeDistributorConfig","_context63","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee64","contractPaused","_args64","_context64","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref79","_callee66","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context66","lastAllocationsPromise","_ref80","_callee65","lastAllocations","_context65","_x70","_x71","alloc","_x69","checkMigration","_ref81","_callee67","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context67","getContractBalance","_x72","_x73","_ref82","_callee68","eventName","_args68","_context68","getContractPastEvents","_x74","_x75","estimateMethodGasUsage","_ref83","_callee69","methodParams","_contract$methods","functionCall","gasLimit","_ref84","_ref85","_args69","_context69","getGasPrice","estimateGas","_x76","_x77","_ref86","_callee70","userAddress","signedParameters","callback_receipt","_contract$methods2","_context70","on","once","confirmationNumber","receipt","_x78","_x79","_x80","_x81","_x82","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref87","_callee71","biconomyInfo","res","_context71","limits","apiId","headers","x-api-key","_x83","sendTxWithPermit","_ref88","_callee72","_contract$methods3","messageToSign","_this$getSignaturePar","_context72","encodeABI","personal","sign","_x84","_x85","_x86","_x87","_x88","_x89","buildBiconomyErc20ForwarderTx","_ref89","_callee73","permitType","callData","buildParams","_context73","txGas","erc20ForwarderClient","buildTx","_x90","_x91","_x92","_x93","_x94","_ref90","_callee75","_context75","_ref91","_callee74","_context74","_x96","_x97","_x95","sendBiconomyTxWithErc20Forwarder","_ref92","_callee76","req","metaInfo","txResponse","fetchReceiptIntervalId","_context76","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x98","_x99","_x100","_x101","sendBiconomyTxWithPersonalSign","_ref93","_callee77","_this$getSignaturePar2","_context77","getNonce","_x102","_x103","_x104","_x105","signPermitEIP2612","_ref94","_callee78","erc20Name","owner","spender","deadline","domain","permit","domainData","_context78","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x106","_x107","_x108","_x109","_x110","_x111","_x112","_x113","signPermit","_ref95","_callee79","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args79","_context79","net","getId","round","nonceMethod","pow","allowed","response","_x114","_x115","_x116","_ref96","_callee80","permitParams","methodAbi","useNonce","_args80","_context80","_jsonInterface","f","unshift","_x117","_x118","_x119","_x120","_x121","_x122","_x123","sendSignedTx","_ref97","_callee81","MetaTransaction","dataToSign","_context81","_x124","_x125","_x126","_x127","_x128","checkTokenApproved","_ref98","_callee82","contractAddr","walletAddr","_ref99","_ref100","allowance","_context82","getAllowance","gte","_x129","_x130","_x131","_ref101","_callee83","_context83","_x132","_x133","_x134","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref102","_callee84","stakedBalance","_args84","_context84","_x135","_x136","getTrancheStakingRewards","_ref103","_callee86","_context86","_ref104","_callee85","tokenGlobalConfig","_context85","_x139","_x137","_x138","_ref105","_callee87","field","_args87","_context87","_x140","_x141","_x142","_x143","_x144","_x145","_x146","_x147","_ref106","_callee88","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref107","_ref108","totalSupply","virtualPrice","_ref109","_ref110","staked1","lastPrice1","_ref111","_ref112","deposited1","lastPrice","_ref113","_ref114","redeemable1","staked2","_ref115","_ref116","trancheApy2","deposited3","_ref117","_ref118","trancheFee","_ref119","_ref120","deposited4","redeemable3","_ref121","_ref122","deposited2","redeemable2","_ref123","_ref124","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref125","_ref126","rewardsTokens","incentiveTokens","govTokens","_args88","_context88","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x148","_x149","_x150","_x151","_x152","_x153","_x154","loadAssetField","_ref127","_callee89","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref128","_ref129","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref130","_ref131","amountLentCurve1","redeemableBalanceCurve","_ref132","_ref133","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref134","_ref135","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref136","_ref137","tokenPriceFirstDeposit","_ref138","_ref139","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref140","_ref141","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref142","_ref143","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref144","_ref145","amountLentCurve2","redeemableBalanceCurve1","_ref146","_ref147","redeemableBalance2","_args89","_context89","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x155","_x156","_x157","_x158","getIdleTokenSupply","_ref148","_callee90","idleTokenSupply","_args90","_context90","_x159","getIdleTokenPriceWithFee","_ref149","_callee91","_ref150","_ref151","fee","priceWFee","_args91","_context91","eq","_x160","_x161","_ref152","_callee92","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args92","_context92","_x162","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref153","_callee93","_ref154","_ref155","idleTokensTotalSupply","userShare","_context93","_x163","_x164","_callee95","coverProtocolConfig","nexusMutualConfig","_args95","_context95","_ref157","_callee94","coverage","coverageTokens","protocolImage","_context94","tokens","expirationTimestamp","utc","_x165","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref158","_callee97","incidentsInfo","_ref159","_ref160","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context97","directProps","startBlock","contractInfo","buyer","_ref161","_callee96","cover","coverId","claimSubmittedEvent","_ref162","_ref163","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref164","_ref165","_context96","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x167","_x166","getBatchedDepositExecutions","_ref166","_callee98","_context98","_x168","getBatchedDeposits","_callee100","filter_by_status","batchDepositConfig","batchedDeposits","_args100","_context100","_ref168","_callee99","currBatchIndex","batchIndex","_ref169","_ref170","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context99","_x169","getETHBalance","_ref171","_callee101","fixDecimals","_args101","_context101","_x170","_ref172","_callee102","_ref173","_ref174","_args102","_context102","_x171","_x172","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref175","_callee103","_args103","_context103","_x173","_ref176","_callee104","_args104","_context104","_x174","_ref177","_callee105","_args105","_context105","_x175","_x176","getProtocolBalance","_ref178","_callee106","_context106","_x177","_x178","getAprs","_ref179","_callee107","_context107","addresses","_x179","genericIdleCall","_ref180","_callee108","callParams","_args108","_context108","_x180","_ref181","_callee109","_contract$methods4","_args109","_context109","_x181","_x182","_ref182","_callee111","_args111","_context111","_ref183","_callee110","_context110","_x184","_x185","_x183","getTxDecodedLogs","_ref184","_callee113","logAddr","decodeLogs","internalTransfers","_context113","_ref185","_callee112","_context112","_x190","_x191","_x186","_x187","_x188","_x189","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee114","_context114","_ref187","_callee115","_context115","getBlock","_x192","_ref188","_callee116","_args116","_context116","getPastEvents","_x193","_x194","_ref189","_callee117","_args117","_context117","_x195","_x196","cachedContractCall","_ref190","_callee118","_args118","_context118","_x197","_x198","_ref191","_callee119","_contract$methods5","_args119","_context119","_x199","_x200","_ref192","_callee120","async","_args120","_context120","_x201","_x202","getUnlentBalance","_ref193","_callee121","unlentBalance","_context121","_x203","_ref194","_callee122","_args122","_context122","_x204","getLastAllocations","_ref195","_callee124","tokenAllocations","_context124","_ref196","_callee123","_context123","_x206","_x207","_x205","_ref197","_callee125","protocolsAprs","_ref198","_ref199","govTokensBalances","_args125","_context125","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x208","getSushiswapPoolTokenPrice","_ref200","_callee126","_ref201","_ref202","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref203","_ref204","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context126","getSushiswapConversionRate","_x209","_ref205","_callee127","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context127","_x210","_x211","_ref206","_callee128","unires","_context128","addressForPrice","_x212","_x213","getCurveDepositedTokens","_ref207","_callee129","idleTokensBalances","remainingCurveTokens","_args129","_context129","_x214","getCurveUnevenTokenAmounts","_ref208","_callee130","amounts","max_burn_amount","unevenAmounts","_context130","getCurveDepositContract","_x215","_x216","_callee131","curveRatesInfo","_context131","strategyTokens","getCurveAPYContract","_callee132","blocksForPrevTokenPrice","_ref211","_ref212","prevTokenPrice","blocksMultiplier","curveAPR","_context132","getCurveTokenSupply","_callee133","_context133","getCurvePoolContract","_callee134","_args134","_context134","_callee135","_args135","_context135","_ref216","_callee136","_ref217","_ref218","_context136","_x217","_callee137","depositContractInfo","_context137","getCurveZapContract","_callee138","zapContractInfo","_context138","_callee139","poolContractInfo","_context139","getCurveSwapContract","_callee140","migrationContractInfo","_context140","getCurveIdleTokensAmounts","_callee142","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args142","_context142","_ref224","_callee141","coinIndex","curveIdleTokens","_context141","migrationParams","_x218","getCurveTokensAmounts","_callee144","useCoinIndex","_args144","_context144","_ref226","_callee143","_ref227","_ref228","idleTokenPrice","totalTokenSupply","_context143","_x219","getCurveAmounts","_ref229","_callee146","_args146","_context146","_ref230","_callee145","_context145","_x222","_x220","_x221","getCurveTokenAmount","_ref231","_callee147","_args147","_context147","_x223","getCurveSlippage","_ref232","_callee148","uneven_amounts","depositContract","_ref233","_ref234","Sv","_args148","_context148","_x224","_x225","_ref235","_callee149","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref236","_ref237","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args149","_context149","IAaveIncentivesController","emissionPerSecond","_x226","_callee151","_args151","_context151","_ref239","_callee150","_ref240","_ref241","_context150","_x227","getWMaticApr","_ref242","_callee152","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args152","_context152","_x228","_x229","getStkAaveApr","_ref243","_callee153","aaveConversionRate","stkAaveAPR","stkAaveValue","_args153","_context153","_x230","_x231","getCompAPR","_ref244","_callee154","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args154","_context154","_x232","_x233","getCompSpeed","_ref245","_callee155","cTokenAddress","compSpeed","_context155","_x234","_ref246","_callee156","cTokenInfo","compoundAllocationPerc","_ref247","_ref248","cTokenTotalSupply","compoundPoolShare","_args156","_context156","_x235","_callee158","_args158","_context158","_ref250","_callee157","_ref251","_ref252","_context157","_x236","_callee160","_args160","_context160","_ref254","_callee159","_ref255","_ref256","compApr","_context159","_x237","getTokensCsv","_callee163","csv","_context163","prototype","sum","pv","cv","avg","_ref258","_callee162","strategy","_context162","_ref259","_callee161","rates","header","aprAvg","scoreAvg","lastRow","_context161","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x239","_x238","_callee165","govToken","convertToken","_args165","_context165","_ref261","_callee164","compTokenBalance","_context164","_x240","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref262","_callee167","govTokensUserDistribution","_args167","_context167","_ref263","_callee166","_context166","_x242","_x241","_ref264","_callee169","govTokensDistribution","_args169","_context169","_ref265","_callee168","govSpeed","_context168","_x244","_x243","getGovTokensAprs","_ref266","_callee171","govTokensAprs","_args171","_context171","_ref267","_callee170","_ref268","_ref269","_ref270","_ref271","cTokenConfig","_context170","aprTooltipMode","_x247","_x245","_x246","_callee173","_args173","_context173","_ref273","_callee172","govTokenBalance","tokenConversionRate","fromTokenConfig","_context172","_x248","_callee174","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args174","_context174","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref275","_callee176","govTokensAmounts","_context176","getGovTokensUserAmounts","_ref276","_callee175","_context175","getGovTokenAddessByIndex","_x251","_x252","_x249","_x250","_ref277","_callee177","_context177","_x253","_x254","_ref278","_callee178","_context178","_x255","_x256","_callee181","govTokenConfigForced","_args181","_context181","_ref280","_callee180","_context180","_ref281","_callee179","_context179","_x258","_x259","_x257","getTokenFees","_callee182","_args182","_context182","_callee183","_ref284","_ref285","feePercentage","gain","fees","_args183","_context183","_ref286","_callee184","_args184","_context184","_x260","getTotalTVL","_callee185","tokensTVL","_context185","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee189","_context189","_ref289","_callee188","_context188","_ref290","_callee187","oldTokenTVL","idleTokenName","_ref291","_ref292","oldTokenConfig","_ref296","_ref297","oldTokenPrice","oldTotalSupply","_context187","showAUM","_ref293","_callee186","_ref294","_ref295","govTokenConversionRate","govTokenBalanceConverted","_context186","_x263","oldProtocols","oldProtocol","protocolPos","_x262","_x261","getSubstackLatestFeed","_callee190","endpointInfo","idleSubstackFeed","latestFeed","_context190","getAggregatedStats","_callee191","tvls","totalAUM","_args191","_context191","getAggregatedStats_chain","_callee195","avgAPR","_args195","_context195","_ref301","_callee194","_context194","_ref302","_callee193","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context193","_ref303","_callee192","_ref304","_ref305","_context192","_x266","_x265","_x264","getTokenApy","_ref306","_callee196","_context196","_x267","getTokensToMigrate","_callee199","tokensToMigrate","_args199","_context199","_ref308","_callee198","_context198","_ref309","_callee197","_ref310","_context197","_x269","_x268","getProtocolsTokensBalances","_callee201","tokenBalances","minTokenBalance","protocolsTokens","_args201","_context201","_ref312","_callee200","tokenContract","_context200","_x270","_ref313","_callee202","_args202","_context202","_x271","_x272","_x273","getAvgAPYStats","_ref314","_callee203","apiResults","_args203","_context203","_x274","_x275","_ref315","_callee204","count","_conversionRate","ToTokenConfig","_args204","_context204","_x276","_x277","getTokenScore","_ref316","_callee205","_ref317","_ref318","tokenScore","_context205","protocolScore","getTokenScoreApi","_x278","_x279","_ref319","_callee206","scores","_context206","_x280","_x281","_ref320","_callee207","idleGovTokenShowAPR","idleAPR","_args207","_context207","_x282","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","defaultOpacity","hidden","interactive","rainbow","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","description","placement","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","polygonTransactions","portfolioEquityStartDate","batchedDepositsAvailableTokens","polygonTransactionsAvailableTokens","availableTokensChanged","polygonBridgeConfig","batchInfo","redeemable","actionIcon","actionIconProps","apyLong","yieldFarming","strategyName","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","paginationEnabled","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","isDeposit","isWithdraw","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","env","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","useInfuraProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","comingSoon","titlePostfix","enabledEnvs","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","polygon","baseUrl","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","currentWeb3","permitClient","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","isSupportedNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","_args7","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","_args25","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args27","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","skipMintForDeposit","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","rowsPerPage","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.a4f04c57.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // console.log('tokensData',tokensData);\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const currentNetworkId = this.getRequiredNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    // if (tokenSymbol === 'USDC'){\n    //   debugger;\n    // }\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const networkId = this.getCurrentNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getCurrentNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getCurrentNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const networkId = this.getCurrentNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getCurrentNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getCurrentNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    polygonTransactions:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n    polygonTransactionsAvailableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading || currentNetwork.id === 137){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio,\n        polygonTransactions\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Get Polygon deposits\n        polygonBridgeConfig.enabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.polygonTransactions = polygonTransactions && polygonTransactions.length>0 ? polygonTransactions : null;\n      if (newState.polygonTransactions){\n        newState.polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n          let actionIcon = null;\n          switch (tx.action){\n            default:\n            case 'Deposit':\n              actionIcon = 'ArrowDownward';\n            break;\n            case 'Withdraw':\n              actionIcon = 'ArrowUpward';\n            break;\n            case 'Exit':\n              actionIcon = 'Undo';\n            break;\n          }\n          const depositInfo = {\n            actionIcon,\n            amount:tx.value,\n            token:tx.tokenSymbol,\n            action:tx.action.toUpperCase(),\n            bridgeType:tx.bridgeType.toUpperCase(),\n            status:tx.included ? 'Completed' : 'pending',\n            hash:this.functionsUtil.shortenHash(tx.hash),\n            statusIcon:tx.included ? 'Done' : 'Timelapse',\n            actionIconProps:{\n              color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n              bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n            },\n            url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n            date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n            statusIconProps:{\n              color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n            },\n            tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n          };\n          return depositInfo;\n        });\n      }\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) : !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.polygonTransactions && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <Title my={[3,4]}>Polygon Bridge Transactions</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <CustomList\n                        paginationEnabled={true}\n                        handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n                        cols={[\n                          {\n                            title:'HASH',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.18],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'bgIcon',\n                                path:['actionIcon'],\n                              },\n                              {\n                                type:'text',\n                                path:['hash'],\n                                props:{\n                                  ml:[0,2]\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'ACTION',\n                            props:{\n                              width:[0.25,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['action'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'DATE',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['date'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'BRIDGE',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.12],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['bridgeType'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'AMOUNT',\n                            props:{\n                              width:[0.25, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['amount'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.25,0.13]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['tokenIcon'],\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','1.6em']\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                              }\n                            ]\n                          },\n                        ]}\n                        {...this.props}\n                        rows={this.state.polygonTransactionsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n        1:[\"idleFEIYield\",\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"]\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        useInfuraProvider:false,\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        useInfuraProvider:false,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        name:'Matic',\n        version:'v1',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 137, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    firstBlockNumber: 8119247,\n    enabledNetworks: [1, 137],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://rpc-mainnet.matic.network'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:false,\n      route:'polygon-bridge',\n      subComponent:PolygonBridge,\n      availableNetworks:[1,5,137,80001],\n      label:'Ethereum <> Polygon Bridge',\n      image:'images/protocols/polygon.svg',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:null,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:null,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    // debugger;\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(() => {\n      // console.log(networkId,this.state.network);\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          web3Infura:null,\n          permitClient:null,\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n\n    // if (!networkId){\n    //   return false;\n    // }\n\n    const networkConfig = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n\n    // console.log('initWeb3',this.state.network.current.id,networkId,provider,web3Rpc,useWeb3Provider);\n\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      // if (this.state.networkInitialized && connectorName !== 'Infura'){\n      //   this.props.setConnector('Infura',null);\n      // }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.required.id]);\n\n    // console.log('initializeContracts',contracts,this.props.availableStrategies);\n\n    if (contracts){\n      await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n        const contractInfo = contracts[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const useInfuraProvider = !!contractInfo.useInfuraProvider;\n          this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n          await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        // Initialize govToken contracts\n        let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n        if (!foundGovTokenContract) {\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[this.state.network.required.id] ? govTokenConfig.addresses[this.state.network.required.id] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          await this.initContract(token, contractAddress, govTokenConfig.abi);\n        }\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    if (this.props.availableTranches){\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n        const tokens = this.props.availableTranches[protocol];\n        await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n          const tokenConfig = tokens[token];\n          await Promise.all([\n            this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n            this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n            this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n            this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n            this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n            this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n          ]);\n        });\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n     const networkId =\n       typeof this.props.config !== \"undefined\" &&\n       typeof this.props.config.requiredNetwork !== \"undefined\"\n         ? this.props.config.requiredNetwork\n         : globalConfigs.network.requiredNetwork;\n\n     // if (!networkId || !globalConfigs.network.availableNetworks[networkId]){\n     //   return null;\n     // }\n\n     let networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData).forEach(key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null) {\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData){\n      Object.keys(storedCachedData).forEach( key => {\n        const storedData = storedCachedData[key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now() / 1000);\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce((enabledTokens, token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled) {\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      }, {});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens_2',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    // console.log('requiredNetwork',requiredNetwork);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment() {\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    }, () => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  tokenConfig={this.state.tokenConfig}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setToken={e => { this.setToken(e) }}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setToken={e => { this.setToken(e) }}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}