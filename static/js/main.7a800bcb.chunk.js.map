{"version":3,"sources":["AssetField/AssetField.js","FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","ImageButton/ImageButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","RoundButton/RoundButton.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ExecuteTransaction/ExecuteTransaction.js","ExtLink/ExtLink.js","theme.js","TxProgressBar/TxProgressBar.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Staking/Staking.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","CardIconButton/CardIconButton.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","IconBox/IconBox.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Link","Icon","Text","customFieldName","pop","customFieldProps","formattedValue","_isBigNumber","Component","FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","text","textProps","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","ConnectBox","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","cardProps","mt","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","py","px","transition","cursor","overflow","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","getEtherscanTransactionUrl","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","formattedNumber","formatMoney","precision","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","children","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","RoundButton","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","ExecuteTransaction","txStatus","processing","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","web3","network","progressBarProps","waitText","cancelTransaction","endMessage","execute","componentProps","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","exit","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TxProgressBar","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getCurrentNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","span","renderRemainingTime","loadingMessage","sendingMessage","href","explorer","cancelTextColor","cancelTextHoverColor","bg","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","button","gradientButton","empty","select","selectDark","input","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","regenerator_default","checkContractApproved","enableERC20","contractInfo","executeTx","_amount","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","getPermitTransactionParams","signPermit","console","log","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","initContract","abi","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","Staking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","selectedOption","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","transactionSucceeded","toggleShowTokenWrapper","showTokenWrapperEnabled","toolProps","contract","updateData","selectedActionChanged","contractApprovedChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","stakedTokensLog","txReceipt","logs","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","loadStats","reduce","_this5","enabled","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","_this6","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","selectToken","poolLink","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","CardIconButton","iconColor","iconBgColor","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","polygonTransactions","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","polygonTransactionsAvailableTokens","availableTokensChanged","polygonBridgeConfig","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","getPolygonBridgeTxs","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","actionIcon","bridgeType","included","actionIconProps","networkId","avgScore","totalBalanceWithScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","currentNetworkId","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","enabledGovTokens","availableNetworks","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","goToSection","route","borderBottom","h4","desc","visible","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","polygonTxs","defaultTransaction","selectedTransaction","loadPolygonTxs","rootTokenConfig","rootToken","childTokenConfig","childToken","encodeParameter","depositData","sendValue","maticPOSClient","exitERC20","encodeAbi","exitCalldata","isETH","contracts","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","events","event","EtherPredicate","raw","maticNetwork","mainNetwork","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","returnValues","exited","paramIsToken","defaultAction","isExit","isDeposit","isWithdraw","BuyModal","showInline","availableMethods","buyToken","selectTransaction","exitCallback","getExitTransactionParams","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","protocol","aprTooltipMode","distributionMode","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","WMATIC","ERC20","137","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","useInfuraProvider","RootChainManager","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","4","5","1337","80001","isForked","requiredNetwork","blocksPerYear","secondsPerYear","requiredConfirmations","accountBalanceMinimum","enabledNetworks","providers","infura","REACT_APP_INFURA_KEY","rpc","polygon","baseUrl","networkPairs","covalent","REACT_APP_COVALENT_KEY","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","snapshot","whitelist","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","polygonBridge","subComponent","StateSender","ChildERC20","ethWrapper","stake","LpStaking","SushiLiquidityPool","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","useIconOnly","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addressCheck","checkAddress","currentProvider","getCurrentNetworkId","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getBaseToken","networkConfig","defaultNetwork","current","_callee15","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","depositManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","last_state_id","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","_args15","_context15","getPolygonCurrentLastStateId","makeCachedRequest","result","_ref19","ethereumTx","stateSenderLog","tx_state_id","getTxReceipt","web3Infura","hexToNumberString","_ref20","_callee13","_context13","items","to_address","_ref21","_callee14","polygonTx","_context14","normalizePolygonTx","getPolygonBaseTxs","_callee16","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args16","_context16","getCachedRequest","block_height","filterPolygonTxs","toConsumableArray","tx_hash","saveFetchedTxs","getEtherscanBaseTxs","_callee17","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args17","_context17","filterEthereumTxs","saveFetchedTransactions","_callee18","_args18","_context18","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee19","resultData","_resultData","allAvailableTokens","_args19","_context19","processStoredTxs","_callee20","contractInstance","_context20","web3Polygon","Contract","constant","inputs","outputs","payable","stateMutability","lastStateId","call","checkPolygonTransactionIncluded","_ref27","_callee21","_ref28","_ref29","_context21","getTransactionReceipt","_x9","_ref30","_callee22","_args22","_context22","_x10","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","idleToken","block_signed_at","logEvent","raw_log_topics","tokenDecimal","from_address","gasUsed","gas_spent","gas_price","_ref31","_callee23","processTransactions","idleTokensAddresses","_args23","_context23","mappedTx","_x11","_x12","_ref32","_callee24","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args24","_context24","tokenMigrationToolParams","curveTokenConfig","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x13","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref33","_callee29","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args29","_context29","baseTokenAddress","_ref34","_callee28","minedTxs","_context28","_ref35","_callee27","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context27","getCurveTokenPrice","_ref36","_callee25","_context25","_x18","_x19","baseTokensConfig","t2","_ref37","_callee26","_context26","_x20","_x21","_x16","_x17","_x15","_x14","_ref38","_callee35","txsToProcess","_args35","_context35","_ref39","_callee34","_context34","_ref40","_callee33","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context33","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref41","_callee30","_context30","_x26","_x27","_ref42","_callee31","_context31","_x28","_x29","_ref43","_callee32","_context32","_x30","_x31","decodeLog","_token","_x24","_x25","_x23","_x22","alias","getCustomAddress","setCustomAddress","customAddress","_ref44","_callee36","error_callback","_args36","_context36","catch","_x32","_ref45","_callee37","return_data","_args37","_context37","_x33","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee38","googlePageviewInfo","isOrigin","_args38","_context38","ga","_ref47","_callee40","googleEventsInfo","originOk","_args40","_context40","_ref48","_callee39","_context39","hitCallback","hitCallbackFail","_x35","_x36","_x34","createContract","_ref49","_callee41","web3Provider","_args41","_context41","_x37","_x38","_x39","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee44","activeOnly","validProposals","_args44","_context44","addr","msg","_ref51","_callee43","checkedStrategies","_context43","metadata","_ref52","_callee42","_context42","symbol","_x41","_x40","_ref53","_callee45","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args45","_context45","_x42","_ref54","_callee46","_context46","_x43","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee47","contractPaused","_args47","_context47","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref56","_callee49","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context49","lastAllocationsPromise","_ref57","_callee48","lastAllocations","_context48","_x45","_x46","alloc","_x44","_ref58","_callee50","oldContractBalance","oldContractTokenDecimals","oldContractName","_context50","getContractBalance","_x47","_x48","estimateMethodGasUsage","_ref59","_callee51","_contract$methods","functionCall","gasLimit","_ref60","_ref61","_args51","_context51","getGasPrice","estimateGas","_x49","_x50","_ref62","_callee52","callback_receipt","_contract$methods2","_context52","once","confirmationNumber","receipt","_x51","_x52","_x53","_x54","_x55","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref63","_callee53","biconomyInfo","res","_context53","x-api-key","_x56","sendTxWithPermit","_ref64","_callee54","_contract$methods3","messageToSign","_this$getSignaturePar","_context54","encodeABI","_address","personal","sign","_x57","_x58","_x59","_x60","_x61","_x62","buildBiconomyErc20ForwarderTx","_ref65","_callee55","tokenAddress","callData","_context55","erc20ForwarderClient","buildTx","txGas","_x63","_x64","_x65","_x66","_x67","sendBiconomyTxWithErc20Forwarder","_ref66","_callee56","req","metaInfo","txResponse","fetchReceiptIntervalId","_context56","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x68","_x69","_x70","_x71","sendBiconomyTxWithPersonalSign","_ref67","_callee57","_this$getSignaturePar2","_context57","getNonce","_x72","_x73","_x74","_x75","signPermitEIP2612","_ref68","_callee58","erc20Name","owner","spender","deadline","domain","domainData","_context58","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x76","_x77","_x78","_x79","_x80","_x81","_x82","_x83","_ref69","_callee59","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args59","_context59","net","getId","allowed","response","_x84","_x85","_x86","_ref70","_callee60","permitParams","methodAbi","useNonce","_args60","_context60","_jsonInterface","f","unshift","_x87","_x88","_x89","_x90","_x91","_x92","_x93","sendSignedTx","_ref71","_callee61","MetaTransaction","dataToSign","_context61","_x94","_x95","_x96","_x97","_x98","_ref72","_callee62","contractAddr","walletAddr","_ref73","_ref74","allowance","_context62","getAllowance","_x99","_x100","_x101","_ref75","_callee63","_context63","_x102","_x103","_x104","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","_ref76","_callee64","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref77","_ref78","curveAvgBuyPrice","curveTokenBalance","_ref79","_ref80","amountLentCurve1","redeemableBalanceCurve","_ref81","_ref82","earningPerYear","_ref83","_ref84","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref85","_ref86","tokenPriceFirstDeposit","_ref87","_ref88","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref89","_ref90","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref91","_ref92","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref93","_ref94","amountLentCurve2","redeemableBalanceCurve1","_ref95","_ref96","redeemableBalance2","_args64","_context64","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x105","_x106","_x107","_x108","getIdleTokenSupply","_ref97","_callee65","idleTokenSupply","_args65","_context65","_x109","getIdleTokenPriceWithFee","_ref98","_callee66","_ref99","_ref100","priceWFee","_args66","_context66","eq","_x110","_x111","_ref101","_callee67","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args67","_context67","_x112","clearCachedData","useLocalStorage","_ref102","_callee68","_ref103","_ref104","idleTokensTotalSupply","userShare","_context68","_x113","_x114","_callee70","_args70","_context70","_ref106","_callee69","coverageTokens","protocolImage","_context69","_x115","_ref107","_callee71","_context71","_x116","_callee73","filter_by_status","_args73","_context73","_ref109","_callee72","_ref110","_ref111","_context72","cachedContractCall","_x117","_ref112","_callee74","fixDecimals","_args74","_context74","_x118","_ref113","_callee75","_ref114","_ref115","_args75","_context75","_x119","_x120","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","getTokenTotalSupply","_ref116","_callee76","totalSupply","_args76","_context76","_x121","_ref117","_callee77","_args77","_context77","_x122","_x123","getProtocolBalance","_ref118","_callee78","_context78","_x124","_x125","getAprs","_ref119","_callee79","_context79","addresses","_x126","genericIdleCall","_ref120","_callee80","callParams","_args80","_context80","_x127","_ref121","_callee81","_contract$methods4","_args81","_context81","_x128","_x129","_ref122","_callee83","_args83","_context83","_ref123","_callee82","_context82","_x131","_x132","_x130","getTxDecodedLogs","_ref124","_callee85","logAddr","decodeLogs","internalTransfers","_context85","_ref125","_callee84","_context84","_x137","_x138","_x133","_x134","_x135","_x136","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee86","_context86","getContractPastEvents","_ref127","_callee87","_args87","_context87","getPastEvents","_x139","_x140","_ref128","_callee88","_args88","_context88","_x141","_x142","_ref129","_callee89","_contract$methods5","_args89","_context89","_x143","_x144","_ref130","_callee90","_args90","_context90","_x145","_x146","apr2apy","getUnlentBalance","_ref131","_callee91","unlentBalance","_context91","_x147","_ref132","_callee92","_args92","_context92","_x148","_ref133","_callee94","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args94","_context94","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref134","_callee93","_ref135","_ref136","protocolBalance","protocolAllocation","_context93","_x150","_x151","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x149","getUniswapConversionRate_path","_ref137","_callee95","unires","_context95","_x152","_ref138","_callee96","pairAddresses","_ref139","_ref140","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref141","_ref142","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context96","_x153","_x154","_ref143","_callee97","tokenConfigFrom","tokenConfigDest","WETHAddr","_context97","_x155","_x156","_ref144","_callee98","_context98","_x157","_x158","getCurveDepositedTokens","_ref145","_callee99","idleTokensBalances","remainingCurveTokens","_args99","_context99","_x159","getCurveUnevenTokenAmounts","_ref146","_callee100","amounts","max_burn_amount","unevenAmounts","_context100","getCurveDepositContract","_x160","_x161","_callee101","curveRatesInfo","_context101","strategyTokens","getCurveAPYContract","_callee102","blocksForPrevTokenPrice","_ref149","_ref150","prevTokenPrice","blocksMultiplier","curveAPR","_context102","getCurveTokenSupply","_callee103","_context103","getCurvePoolContract","_callee104","_args104","_context104","_callee105","_args105","_context105","_ref154","_callee106","_ref155","_ref156","_context106","_x162","_callee107","depositContractInfo","_context107","getCurveZapContract","_callee108","zapContractInfo","_context108","_callee109","poolContractInfo","_context109","getCurveSwapContract","_callee110","_context110","getCurveIdleTokensAmounts","_callee112","max_slippage","curveTokenSupply","curveTokenShare","_args112","_context112","_ref162","_callee111","curveIdleTokens","_context111","_x163","getCurveTokensAmounts","_callee114","useCoinIndex","_args114","_context114","_ref164","_callee113","_ref165","_ref166","totalTokenSupply","_context113","_x164","getCurveAmounts","_ref167","_callee116","_args116","_context116","_ref168","_callee115","_context115","_x167","_x165","_x166","getCurveTokenAmount","_ref169","_callee117","_args117","_context117","_x168","getCurveSlippage","_ref170","_callee118","uneven_amounts","_ref171","_ref172","virtualPrice","Sv","_args118","_context118","_x169","_x170","_ref173","_callee119","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref174","_ref175","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args119","_context119","IAaveIncentivesController","emissionPerSecond","_x171","_callee121","_args121","_context121","_ref177","_callee120","_ref178","_ref179","_context120","_x172","getWMaticApr","_ref180","_callee122","maticConversionRate","wMaticTokenConfig","wMaticApr","wMaticValue","_args122","_context122","_x173","_x174","getStkAaveApr","_ref181","_callee123","aaveConversionRate","stkAaveAPR","stkAaveValue","_args123","_context123","_x175","_x176","getCompAPR","_ref182","_callee124","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args124","_context124","_x177","_x178","getCompSpeed","_ref183","_callee125","cTokenAddress","compSpeed","_context125","_x179","_ref184","_callee126","cTokenInfo","compoundAllocationPerc","_ref185","_ref186","cTokenTotalSupply","compoundPoolShare","_args126","_context126","_x180","_callee128","_args128","_context128","_ref188","_callee127","_ref189","_ref190","_context127","_x181","_callee130","_args130","_context130","_ref192","_callee129","_ref193","_ref194","compApr","_context129","_x182","getTokensCsv","_callee133","csv","_context133","prototype","sum","pv","cv","avg","_ref196","_callee132","_context132","_ref197","_callee131","header","aprAvg","scoreAvg","lastRow","_context131","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x184","_x183","_callee135","_args135","_context135","_ref199","_callee134","compTokenBalance","_context134","_x185","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref200","_callee137","govTokensUserDistribution","_args137","_context137","_ref201","_callee136","_context136","_x187","_x186","_ref202","_callee139","govTokensDistribution","tokenGovTokens","_args139","_context139","_ref203","_callee138","govSpeed","_context138","_x189","_x188","_ref204","_callee141","_args141","_context141","_ref205","_callee140","_ref206","_ref207","_ref208","_ref209","cTokenConfig","_context140","_x192","_x190","_x191","_callee143","_args143","_context143","_ref211","_callee142","tokenConversionRate","fromTokenConfig","_context142","_x193","getGovTokenConfigByAddress","_callee144","checkShowBalance","govTokensEarnings","_args144","_context144","govTokenAmount","getGovTokensIndexes","_ref213","_callee146","govTokensAmounts","_context146","_ref214","_callee145","govTokenAddress","_context145","_x196","_x197","_x194","_x195","_callee149","govTokenConfigForced","_args149","_context149","_ref216","_callee148","_context148","_ref217","_callee147","_context147","_x199","_x200","_x198","_callee150","_args150","_context150","_callee151","_ref220","_ref221","gain","fees","_args151","_context151","_ref222","_callee152","_args152","_context152","_x201","getTotalTVL","_callee153","tokensTVL","_context153","getTokensTVL","totalTVL","tokenTVL","_callee157","_context157","_ref225","_callee156","_context156","_ref226","_callee155","oldTokenTVL","idleTokenName","_ref227","_ref228","_ref232","_ref233","oldTokenPrice","oldTotalSupply","_context155","_ref229","_callee154","_ref230","_ref231","govTokenConversionRate","govTokenBalanceConverted","_context154","_x204","_x203","_x202","getSubstackLatestFeed","_callee158","endpointInfo","idleSubstackFeed","latestFeed","_context158","getAggregatedStats","_callee159","totalAUM","_args159","_context159","getAggregatedStats_chain","_callee163","avgAPR","_args163","_context163","_ref237","_callee162","_context162","_ref238","_callee161","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context161","_ref239","_callee160","_ref240","_ref241","_context160","_x207","_x206","_x205","getTokenApy","_ref242","_callee164","_context164","_x208","_callee167","_args167","_context167","_ref244","_callee166","_context166","_ref245","_callee165","_ref246","_context165","_x210","_x209","getProtocolsTokensBalances","_callee169","tokenBalances","minTokenBalance","protocolsTokens","_args169","_context169","_ref248","_callee168","tokenContract","_context168","_x211","_ref249","_callee170","_args170","_context170","_x212","_x213","_x214","getAvgAPYStats","_ref250","_callee171","apiResults","_args171","_context171","_x215","_x216","_ref251","_callee172","_conversionRate","_args172","_context172","_x217","_x218","_ref252","_callee173","_ref253","_ref254","_context173","protocolScore","getTokenScoreApi","_x219","_x220","_ref255","_callee174","_context174","_x221","_x222","_ref256","_callee177","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args177","_context177","_ref257","_callee176","addrIndex","protocolApr","protocolApy","govTokenAPR","_context176","_ref258","_callee175","_context175","_x226","_x224","_x225","_x223","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","closeModal","goBack","resetModal","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","Tos","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","ModalCard","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","checkNetwork","accountBalanceToken","checkPreflight","networkInitialized","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","initContractCustomProvider","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","setNetwork","metamaskProvider","web3RpcKey","web3Rpc","web3InfuraRpc","connectorNameChanged","web3Host","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkType","getNetworkName","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","transactionHashCallback","errorCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","sendTransaction","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","anonymous","indexed","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.7a800bcb.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? <Text {...fieldProps}>-</Text> : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled && typeof this.props.getPermitTransactionParams === 'function'){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, this.props.contractInfo.name);\n      console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams,\n        contractName\n      } = params;\n\n      const value = params.value || null;\n      contractName = contractName || this.props.contractInfo.name;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (this.props.contractInfo.address){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      // console.log('contractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass Staking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.setState({\n          tokenWrapperProps:null,\n          showTokenWrapperEnabled:false\n        },() => {\n          this.updateData(selectedActionChanged);\n        });\n      }\n    }\n\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.state.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.state.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.state.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.state.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    /*\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n        break;\n        case 'Withdraw':\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      inputValue,\n      balanceSelectorInfo\n    });\n    */\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.state.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.state.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.state.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.state.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.state.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedAction = 'Stake';\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.state.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.state.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.state.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.state.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.state.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.state.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.state.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.state.contractInfo.maxBonusDays} days to achieve a ${this.state.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.state.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.state.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  toggleShowTokenWrapper = showTokenWrapperEnabled => {\n    this.setState({\n      showTokenWrapperEnabled\n    });\n  }\n\n  selectToken(selectedOption){\n    const selectedToken = selectedOption.value;\n    this.setState({\n      selectedToken,\n      selectedOption\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.tokenConfig && this.state.tokenConfig.poolLink && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Pool link:\n                          </Text>\n                          <ExtLink\n                            mt={1}\n                            color={'link'}\n                            hoverColor={'link'}\n                            href={this.state.tokenConfig.poolLink}\n                          >\n                            <Text\n                              color={'link'}\n                              style={{\n                                maxWidth:'100%',\n                                overflow:'hidden',\n                                whiteSpace:'nowrap',\n                                textOverflow:'ellipsis'\n                              }}\n                            >\n                              {this.state.tokenConfig.poolLink}\n                            </Text>\n                          </ExtLink>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Your Stats:\n                          </Text>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              this.state.globalStats.map( (statInfo,index) =>\n                                <StatsCard\n                                  key={`globalStats_${index}`}\n                                  cardProps={{\n                                    mb:[2,0],\n                                    mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                                    width:[1,'100%']\n                                  }}\n                                  textProps={{\n                                    fontSize:[1,2]\n                                  }}\n                                  {...statInfo}\n                                />\n                              )\n                            }\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stake'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'stake LP Tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStake}\n                              handleClick={ e => this.setAction('Stake') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isUnstake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Withdraw'}\n                              imageSrc={'images/upload.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'withdraw LP tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isUnstake}\n                              handleClick={ e => this.setAction('Withdraw') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStats ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stats'}\n                              imageSrc={'images/stats.svg'}\n                              // subcaption={'view some stats'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStats}\n                              handleClick={ e => this.setAction('Stats') }\n                            />\n                          </Flex>\n                          {\n                            /*\n                            this.state.tokenWrapperProps && (\n                              <Flex\n                                mt={1}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                mb={this.state.showTokenWrapperEnabled ? 0 : 3}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    pb:2,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showTokenWrapperEnabled}\n                                      onChange={ e => this.toggleShowTokenWrapper(e.target.checked) }\n                                      label={ isStake ? `Convert your ${this.state.tokenWrapperProps.startContract.token} to ${this.state.tokenWrapperProps.destContract.token}` : `Convert your ${this.state.tokenWrapperProps.destContract.token} to ${this.state.tokenWrapperProps.startContract.token}`}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                              </Flex>\n                            )\n                            */\n                          }\n                          {\n                            (isStake || isUnstake) ?\n                              /*\n                              this.state.showTokenWrapperEnabled && this.state.tokenWrapperProps ? (\n                                <TokenWrapper\n                                  {...this.props}\n                                  fullWidth={true}\n                                  action={ isStake ? 'wrap' : 'unwrap' }\n                                  toolProps={this.state.tokenWrapperProps}\n                                />\n                              ) :\n                              */\n                              (this.state.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.state.contractInfo ? (\n                                <Box\n                                  mt={1}\n                                  width={1}\n                                  mb={[4,3]}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={txAction}\n                                    error={this.state.error}\n                                    steps={this.state.steps}\n                                    infoBox={this.state.infoBox}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.balanceProp}\n                                    contractInfo={this.state.contractInfo}\n                                    permitEnabled={this.state.permitEnabled}\n                                    approveEnabled={this.state.approveEnabled}\n                                    callback={this.transactionSucceeded.bind(this)}\n                                    approveDescription={this.state.approveDescription}\n                                    contractApproved={this.contractApproved.bind(this)}\n                                    balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                    changeInputCallback={this.changeInputCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                          size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                        />\n                                        <Text\n                                          mt={1}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          {\n                                            isStake ? (\n                                              `You don't have any ${this.state.selectedToken} in your wallet.`\n                                            ) : isUnstake && (\n                                              `You don't have any staked ${this.state.selectedToken} to withdraw.`\n                                            )\n                                          }\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Box>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection:'row'\n                                    }}\n                                    loaderProps={{\n                                      size:'30px'\n                                    }}\n                                    textProps={{\n                                      ml:2\n                                    }}\n                                    text={'Loading info...'}\n                                  />\n                                </Flex>\n                              )\n                            ) : isStats && (\n                              <Flex\n                                mt={1}\n                                mb={3}\n                                width={1}\n                                style={{\n                                  flexWrap:'wrap'\n                                }}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  (!this.state.stats || !this.state.stats.length) ? (\n                                    <Flex\n                                      mt={3}\n                                      mb={3}\n                                      width={1}\n                                    >\n                                      <FlexLoader\n                                        flexProps={{\n                                          flexDirection:'row'\n                                        }}\n                                        loaderProps={{\n                                          size:'30px'\n                                        }}\n                                        textProps={{\n                                          ml:2\n                                        }}\n                                        text={'Loading stats...'}\n                                      />\n                                    </Flex>\n                                  ) : this.state.stats.map( (statInfo,index) =>\n                                    <StatsCard\n                                      key={`stats_${index}`}\n                                      cardProps={{\n                                        width:[1,'49%']\n                                      }}\n                                      {...statInfo}\n                                    />\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    polygonTransactions:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n    polygonTransactionsAvailableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio,\n        polygonTransactions\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Get Polygon deposits\n        polygonBridgeConfig.enabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.polygonTransactions = polygonTransactions && polygonTransactions.length>0 ? polygonTransactions : null;\n      if (newState.polygonTransactions){\n        newState.polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n          let actionIcon = null;\n          switch (tx.action){\n            default:\n            case 'Deposit':\n              actionIcon = 'ArrowDownward';\n            break;\n            case 'Withdraw':\n              actionIcon = 'ArrowUpward';\n            break;\n            case 'Exit':\n              actionIcon = 'Undo';\n            break;\n          }\n          const depositInfo = {\n            actionIcon,\n            amount:tx.value,\n            token:tx.tokenSymbol,\n            action:tx.action.toUpperCase(),\n            bridgeType:tx.bridgeType.toUpperCase(),\n            status:tx.included ? 'Completed' : 'pending',\n            hash:this.functionsUtil.shortenHash(tx.hash),\n            statusIcon:tx.included ? 'Done' : 'Timelapse',\n            actionIconProps:{\n              color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n              bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n            },\n            url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n            date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n            statusIconProps:{\n              color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n            },\n            tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n          };\n          return depositInfo;\n        });\n      }\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    const currentNetworkId = currentNetwork.id;\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n    const enabledGovTokens = Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(currentNetworkId)) );\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && enabledGovTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={enabledGovTokens}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.polygonTransactions && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Polygon Bridge Transactions</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <CustomList\n                        handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n                        cols={[\n                          {\n                            title:'HASH',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.18],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'bgIcon',\n                                path:['actionIcon'],\n                              },\n                              {\n                                type:'text',\n                                path:['hash'],\n                                props:{\n                                  ml:[0,2]\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'ACTION',\n                            props:{\n                              width:[0.25,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['action'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'DATE',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['date'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'BRIDGE',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.12],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['bridgeType'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'AMOUNT',\n                            props:{\n                              width:[0.25, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['amount'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.25,0.13]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['tokenIcon'],\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','1.6em']\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                              }\n                            ]\n                          },\n                        ]}\n                        {...this.props}\n                        rows={this.state.polygonTransactionsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n    this.loadPolygonTxs();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    // console.log('polygonTxs',polygonTxs);\n    this.setState({\n      polygonTxs\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      if (rootTokenConfig && childTokenConfig){\n        await Promise.all([\n          this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi),\n          this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi)\n        ]);\n      }\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData(selectedActionChanged);\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    console.log('getTransactionParams',{\n      value,\n      methodName,\n      methodParams,\n      contractName\n    });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const isETH = this.state.selectedToken==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait up to 10 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getCurrentNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetwork = currentNetwork.network === 'mainnet' ? this.functionsUtil.getGlobalConfig(['network','availableNetworks',1,'name']) : this.functionsUtil.getGlobalConfig(['network','availableNetworks',5,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetwork} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && !tx.exited && tx.token === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import Staking from '../Staking/Staking';\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\n// import USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport LpStaking from '../contracts/LpStaking.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\n// import DummyERC20 from '../abis/polygon/DummyERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      availableNetworks:[1,42,1337],\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      availableNetworks:[1,42,1337],\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[1,42,1337],\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    }\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      availableNetworks:[1,5,42,137,80001],\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      availableNetworks:[1,42],\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      availableNetworks:[1,42],\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    availableNetworks:[1,42],\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan'\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      137:{\n        name:'Matic',\n        version:'v1',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n      },\n      5:{\n        name:'Goerli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan'\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon'\n      }\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    enabledNetworks:[1,42,1337,5,137,80001],\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://explorer-mainnet.maticvigil.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        key:env.REACT_APP_ETHERSCAN_KEY,\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].name.toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      subComponent:PolygonBridge,\n      availableNetworks:[1,5,137,80001],\n      label:'Ethereum <> Polygon Bridge',\n      image:'images/protocols/polygon.svg',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:null,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:null,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          /*\n          ETH:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            childToken:{\n              abi:ChildERC20,\n              name:'MaticWETH',\n              address:'0x8cc8538d60901d19692F5ba22684732Bc28F54A3' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          /*\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              // address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              // address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'LP Staking',\n      route:'lp-staking',\n      subComponent:Staking,\n      availableNetworks:[1],\n      desc:'Stake your Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          SLP:{\n            contract:{\n              decimals:24,\n              abi:LpStaking,\n              name:'LpStaking',\n              maxMultiplier:3,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n              // address:'0x95274E30C33083F3E3fEA9454347b9BD59e85225' // Fork\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      availableNetworks:[1],\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      icon:'FileDownload',\n      depositEnabled:false,\n      availableNetworks:[1],\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      route:'convert',\n      icon:'SwapHoriz',\n      availableNetworks:[1],\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      availableNetworks:[1],\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      availableNetworks:[1,5,42],\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC','MATIC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR','MATIC'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','MATIC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    const networkId = this.getCurrentNetworkId();\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n\n    const currentNetworkId = this.getCurrentNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeCachedRequest(etherscanEndpoint,120)\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result){\n        const depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase())  && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n      }\n    }\n\n    txs = txs.sort((a,b) => (a.timeStamp < b.timeStamp ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getCurrentNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTxs(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getCurrentNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = 18;\n    const tokenSymbol = tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEthereumTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getCurrentNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // console.log('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // console.log('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // console.log('processStoredTxs',txHash,realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].name;\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi, web3Provider=null) => {\n    web3Provider = web3Provider || this.props.web3;\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getCurrentNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getCurrentNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getCurrentNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getCurrentNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData, send_raw, raw_tx_data);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n          case 'WMATIC':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n          case 'WMATIC':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getCurrentNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.cachedContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.cachedContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.cachedContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenTotalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    if (!this.BNify(totalSupply).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n    }\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n    const cachedDataKey = `cachedContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution_2',aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution_3',IAaveIncentivesController_name,aTokenTotalSupply,assetData,tokenAllocation);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution_4',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getCurrentNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n        case 'WMATIC':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n        case 'WMATIC':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              case 'WMATIC':\n                govTokenAPR = await this.getWMaticApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have enough ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.SafeAppConnector = SafeAppConnector;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async isSafeApp() {\n    if (this.provider){\n      return await this.provider.isSafeApp();\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      chainId: defaultNetwork, // default: 1\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  maticPOSClient :{},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  checkNetwork: () => {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  networkInitialized:false,\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  initContractCustomProvider: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.functionsUtil.removeStoredItem('cachedRequests');\n        this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n        this.functionsUtil.removeStoredItem('transactions');\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network) && this.state.network.current.id;\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n    const networkConfig = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3Rpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3Rpc;\n        forceCallback = true;\n      }\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              web3Polygon,\n              permitClient,\n              maticPOSClient,\n              maticPlasmaClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                web3Polygon,\n                maticPOSClient,\n                biconomy:false,\n                maticPlasmaClient\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            web3Polygon,\n            maticPOSClient,\n            biconomy:false,\n            maticPlasmaClient\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n          web3Polygon,\n          maticPOSClient,\n          maticPlasmaClient\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractCustomProvider = async (name, address, abi, web3Provider) => {\n    web3Provider = web3Provider || this.state.web3;\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        console.log('wallets',wallets);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].name.toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.current.id]);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        const useInfuraProvider = !!contractInfo.useInfuraProvider;\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n\n    return {\n      id: networkId,\n      name: networkName\n    };\n  }\n\n  getNetworkId = async () => {\n\n    if (!this.state.web3){\n      return {};\n    }\n\n    const networkId = await this.state.web3.eth.net.getId();\n    const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await this.state.web3.eth.net.getNetworkType();\n\n    return {\n      id:networkId,\n      name:networkName\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = {...this.state.network};\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getNetworkId();\n    network.isCorrectNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n    const networkInitialized = !!network.current.id;\n\n\n    if (!this.state.network.current.id || network.current.id !== this.state.network.current.id || !this.state.networkInitialized){\n      // console.log('checkNetwork',network);\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null, send_raw=false, raw_tx_data=null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    if (typeof contract.methods[contractMethod] === 'undefined'){\n      if (typeof callback === 'function') {\n        callback(null,'method_not_found');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      const transactionHashCallback = hash => {\n        this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n        if (!hash){\n          this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n          return false;\n        }\n\n        transaction.transactionHash = hash;\n        transaction.status = \"pending\";\n        transaction.recentEvent = \"transactionHash\";\n        this.updateTransaction(transaction);\n\n        if (callback_receipt){\n          callback_receipt(transaction);\n        }\n\n        // Wait for manual confirmation only for mobile\n        if (this.props.isMobile){\n          if (manualConfirmationTimeoutId){\n            window.clearTimeout(manualConfirmationTimeoutId);\n          }\n          manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n        }\n      };\n\n      const errorCallback = error => {\n        console.log('Tx error',error);\n        \n        const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n        \n        // Set error on transaction\n        transaction.status = \"error\";\n        transaction.recentEvent = \"error\";\n        this.updateTransaction(transaction);\n\n\n        // Show ToastProvider\n        if (!isDeniedTx){\n          window.toastProvider.addMessage(\"Something went wrong\", {\n            icon: 'Block',\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\",\n            colorTheme: 'light',\n            secondaryMessage: \"Please retry\",\n          });\n\n          const isError = error instanceof Error;\n\n          if (typeof error.message !== 'undefined'){\n            this.openTransactionErrorModal(null,error.message);\n          } else if (this.functionsUtil.checkUrlOrigin() && isError){\n            Sentry.captureException(error);\n          }\n        }\n\n        if (typeof callback === 'function') {\n          callback(transaction,error);\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      // console.log('send_raw',send_raw,{\n      //   from:account,\n      //   data:raw_tx_data,\n      //   to:contract._address\n      // });\n      if (send_raw && raw_tx_data){\n        return this.state.web3.eth.sendTransaction({\n            from:account,\n            data:raw_tx_data,\n            to:contract._address\n          })\n          .on(\"transactionHash\", transactionHashCallback)\n          .on(\"receipt\", receiptCallback)\n          .on(\"confirmation\", confirmationCallback)\n          .on(\"error\", errorCallback);\n      } else {\n        // estimate gas price\n        let gas = await contract.methods[contractMethod](...params)\n          .estimateGas(value ? { from: account, value } : { from: account })\n          .catch(e => console.error(e));\n\n        if (gas) {\n          gas = this.functionsUtil.BNify(gas);\n          gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n          // Check if gas is under the gasLimit param\n          if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n            gas = this.functionsUtil.BNify(gasLimit);\n          }\n\n          // Convert gasLimit toBN with web3 utils\n          gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n        }\n\n        return contract.methods[contractMethod](...params)\n          .send(value ? { from: account, value, gas } : { from: account, gas })\n          .on(\"transactionHash\", transactionHashCallback)\n          .on(\"receipt\", receiptCallback)\n          .on(\"confirmation\", confirmationCallback)\n          .on(\"error\", errorCallback);\n      }\n\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.state.network.current.id;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Polygon:null,\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    networkInitialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    checkNetwork: this.checkNetwork,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    initContractCustomProvider: this.initContractCustomProvider,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        maticPOSClient,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      web3Infura={web3Infura}\n                                      web3Polygon={web3Polygon}\n                                      initAccount={initAccount}\n                                      checkNetwork={checkNetwork}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      maticPOSClient={maticPOSClient}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      networkInitialized={networkInitialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      initContractCustomProvider={initContractCustomProvider}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          web3Infura={web3Infura}\n                                          web3Polygon={web3Polygon}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          checkNetwork={checkNetwork}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          networkInitialized={networkInitialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n"],"sourceRoot":""}