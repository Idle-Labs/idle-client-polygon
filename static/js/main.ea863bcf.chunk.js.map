{"version":3,"sources":["ImageButton/ImageButton.js","AssetField/AssetField.js","RoundButton/RoundButton.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","ExtLink/ExtLink.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","IconBox/IconBox.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js"],"names":["ImageButton","isMobile","this","props","image","imageSrc","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","src","imageProps","iconName","name","iconProps","caption","textAlign","fontSize","fontWeight","color","borderRadius","px","py","my","mx","onClick","handleClick","height","mainColor","isActive","contrastColor","style","buttonStyle","justifyContent","buttonProps","Fragment","badge","position","backgroundColor","bgColor","right","top","text","flexDirection","alignItems","mr","captionPos","subcaption","split","map","v","i","key","concat","lineHeight","Component","AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","length","undefined","_this","token","tokenConfig","abrupt","selectedStrategy","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","address","getCachedData","id","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","flexProps","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","ref","_ref12","_ref13","_ref14","_ref15","govTokenConfig","govTokenIndex","distributionFrequency","ml","zIndex","boxShadow","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","govToken","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Link","Icon","Text","customFieldName","pop","customFieldProps","formattedValue","_isBigNumber","RoundButton","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","children","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","loadData","hash","resolveAddress","shortenHash","getENSName","ensName","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","cardProps","transition","cursor","overflow","mt","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","checked","radioBtn","onChange","e","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","textProps","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","getEtherscanTransactionUrl","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","ExtLink","target","rel","formattedNumber","formatMoney","precision","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","itemPos","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","exit","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","align","useIconOnly","iconColor","iconBgColor","button","gradientButton","empty","select","selectDark","input","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","ExecuteTransaction","txStatus","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","getDistribution","slicedToArray","getUniswapConversionRate","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","contract","contracts","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","baseToken","symbol","blockExplorerUrls","method","networkId","ensConfig","TTL","ens","addressCheck","getRequiredNetworkId","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolio","portfolio","orderedTokensBalance","depositedTokens","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args4","totalBalance","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","amountDeposited","tokenAprs","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","reduce","acc","userAvgPrice","getAmountLent","amountLents","_args11","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","required","current","getPolygonBridgeTxs","_callee17","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","currentNetworkId","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args17","_context17","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref19","ethereumTx","txReceipt","stateSenderLog","tx_state_id","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_ref20","_callee13","_context13","_ref21","_callee14","_context14","_ref22","_callee15","_context15","_x9","items","to_address","_ref23","_callee16","polygonTx","_context16","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x10","getPolygonBaseTxs","_callee18","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args18","_context18","getCachedRequest","block_height","filterPolygonTxs","toConsumableArray","tx_hash","saveFetchedTxs","makeRequest","now","getEtherscanBaseTxs","_callee19","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args19","_context19","filterEthereumTxs","saveFetchedTransactions","_callee20","_args20","_context20","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee21","resultData","_resultData","allAvailableTokens","_args21","_context21","processStoredTxs","_callee22","contractInstance","_context22","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref29","_callee23","_ref30","_ref31","_context23","getTransactionReceipt","_x11","_ref32","_callee24","_args24","_context24","_x12","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref33","_callee25","processTransactions","idleTokensAddresses","_args25","_context25","mappedTx","_x13","_x14","_ref34","_callee26","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x15","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref35","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenConfig","baseTokenAddress","_ref36","_callee30","minedTxs","_context30","_ref37","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","_ref38","_callee27","_context27","_x20","_x21","baseTokensConfig","t2","_ref39","_callee28","_context28","_x22","_x23","_x18","_x19","_x17","_x16","_ref40","_callee37","txsToProcess","_args37","_context37","_ref41","_callee36","_context36","_ref42","_callee35","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref43","_callee32","_context32","_x28","_x29","_ref44","_callee33","_context33","_x30","_x31","events","raw","_ref45","_callee34","_context34","_x32","_x33","abi","decodeLog","_token","_x26","_x27","_x25","_x24","alias","getCustomAddress","setCustomAddress","customAddress","_ref46","_callee38","error_callback","config","_args38","_context38","catch","_x34","_ref47","_callee39","apiKeyIndex","apiKey","_args39","_context39","_x35","_ref48","_callee40","return_data","_args40","_context40","_x36","code","errorCode","getGlobalConfigs","array","prop","shift","configs","checkUrlOrigin","origin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee41","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref50","_callee43","googleEventsInfo","debugEnabled","originOk","_args43","_context43","analytics","google","addPostfixForTestnet","availableNetworks","_ref51","_callee42","_context42","hitCallback","hitCallbackFail","_x38","_x39","_x37","createContract","_ref52","_callee44","web3Provider","_args44","_context44","_x40","_x41","_x42","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee47","activeOnly","whitelist","proposals","currTime","validProposals","_args47","_context47","addr","msg","payload","_ref54","_callee46","checkedStrategies","_context46","snapshot","metadata","strategies","_ref55","_callee45","_context45","_x44","_x43","_ref56","_callee48","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","rates","_x45","getTokenDecimals","_ref57","_callee49","_context49","_x46","aprs","allocations","avgApr","aprWeighted","allocation","apr","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee50","feeDistributorConfig","_context50","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee51","contractPaused","_args51","_context51","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref60","_callee53","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context53","lastAllocationsPromise","_ref61","_callee52","lastAllocations","_context52","_x48","_x49","alloc","_x47","_ref62","_callee54","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractName","_context54","getContractBalance","_x50","_x51","getContractEvents","_ref63","_callee55","eventName","_args55","_context55","getContractPastEvents","_x52","_x53","estimateMethodGasUsage","_ref64","_callee56","methodParams","_contract$methods","functionCall","gasLimit","_ref65","_ref66","_args56","_context56","getGasPrice","estimateGas","_x54","_x55","_ref67","_callee57","userAddress","signedParameters","callback_receipt","_contract$methods2","_context57","on","once","confirmationNumber","receipt","_x56","_x57","_x58","_x59","_x60","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref68","_callee58","biconomyInfo","res","_context58","limits","apiId","headers","x-api-key","_x61","sendTxWithPermit","_ref69","_callee59","_contract$methods3","messageToSign","_this$getSignaturePar","_context59","encodeABI","_address","personal","sign","_x62","_x63","_x64","_x65","_x66","_x67","buildBiconomyErc20ForwarderTx","_ref70","_callee60","tokenAddress","permitType","callData","_context60","erc20ForwarderClient","buildTx","txGas","_x68","_x69","_x70","_x71","_x72","sendBiconomyTxWithErc20Forwarder","_ref71","_callee61","req","metaInfo","txResponse","fetchReceiptIntervalId","_context61","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x73","_x74","_x75","_x76","sendBiconomyTxWithPersonalSign","_ref72","_callee62","_this$getSignaturePar2","_context62","getNonce","_x77","_x78","_x79","_x80","signPermitEIP2612","_ref73","_callee63","erc20Name","owner","spender","deadline","domain","permit","domainData","_context63","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x81","_x82","_x83","_x84","_x85","_x86","_x87","_x88","signPermit","_ref74","_callee64","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args64","_context64","net","getId","round","nonceMethod","pow","allowed","response","_x89","_x90","_x91","_ref75","_callee65","permitParams","methodAbi","useNonce","_args65","_context65","_jsonInterface","f","unshift","_x92","_x93","_x94","_x95","_x96","_x97","_x98","sendSignedTx","_ref76","_callee66","MetaTransaction","dataToSign","_context66","_x99","_x100","_x101","_x102","_x103","checkTokenApproved","_ref77","_callee67","contractAddr","walletAddr","_ref78","_ref79","allowance","_context67","getAllowance","gte","_x104","_x105","_x106","_ref80","_callee68","_context68","_x107","_x108","_x109","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","_ref81","_callee69","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref82","_ref83","curveAvgBuyPrice","curveTokenBalance","_ref84","_ref85","amountLentCurve1","redeemableBalanceCurve","_ref86","_ref87","earningPerYear","_ref88","_ref89","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref90","_ref91","tokenPriceFirstDeposit","_ref92","_ref93","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref94","_ref95","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref96","_ref97","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref98","_ref99","amountLentCurve2","redeemableBalanceCurve1","_ref100","_ref101","redeemableBalance2","_args69","_context69","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x110","_x111","_x112","_x113","getIdleTokenSupply","_ref102","_callee70","idleTokenSupply","_args70","_context70","_x114","getIdleTokenPriceWithFee","_ref103","_callee71","_ref104","_ref105","priceWFee","_args71","_context71","eq","_x115","_x116","_ref106","_callee72","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args72","_context72","_x117","clearCachedData","useLocalStorage","expirationDate","_ref107","_callee73","_ref108","_ref109","idleTokensTotalSupply","userShare","_context73","_x118","_x119","openWindow","getActiveCoverages","_callee75","activeCoverages","coverProtocolConfig","_args75","_context75","coverages","_ref111","_callee74","coverage","coverageTokens","collateral","protocolImage","fileClaimUrl","_context74","tokens","initContract","expirationTimestamp","utc","_x120","getBatchedDepositExecutions","_ref112","_callee76","_context76","_x121","getBatchedDeposits","_callee78","filter_by_status","batchDepositConfig","batchedDeposits","_args78","_context78","_ref114","_callee77","currBatchIndex","batchIndex","_ref115","_ref116","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context77","cachedContractCall","_x122","getETHBalance","_ref117","_callee79","fixDecimals","_args79","_context79","_x123","_ref118","_callee80","_ref119","_ref120","_args80","_context80","_x124","_x125","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","getTokenTotalSupply","_ref121","_callee81","totalSupply","_args81","_context81","_x126","_ref122","_callee82","_args82","_context82","_x127","_x128","getProtocolBalance","_ref123","_callee83","_context83","_x129","_x130","getAprs","_ref124","_callee84","_context84","addresses","_x131","genericIdleCall","_ref125","_callee85","callParams","_args85","_context85","_x132","_ref126","_callee86","_contract$methods4","_args86","_context86","_x133","_x134","_ref127","_callee88","_args88","_context88","_ref128","_callee87","_context87","_x136","_x137","_x135","getTxDecodedLogs","_ref129","_callee90","logAddr","decodeLogs","internalTransfers","_context90","_ref130","_callee89","_context89","_x142","_x143","_x138","_x139","_x140","_x141","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee91","_context91","_ref132","_callee92","_args92","_context92","getPastEvents","_x144","_x145","_ref133","_callee93","_args93","_context93","_x146","_x147","_ref134","_callee94","_contract$methods5","_args94","_context94","_x148","_x149","_ref135","_callee95","_args95","_context95","_x150","_x151","apr2apy","getUnlentBalance","_ref136","_callee96","unlentBalance","_context96","_x152","_ref137","_callee97","_args97","_context97","_x153","_ref138","_callee99","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args99","_context99","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref139","_callee98","_ref140","_ref141","protocolBalance","protocolAllocation","_context98","functions","_x155","_x156","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x154","getUniswapConversionRate_path","_ref142","_callee100","one","unires","_context100","_x157","getSushiswapPoolTokenPrice","_ref143","_callee101","pairAddresses","_ref144","_ref145","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref146","_ref147","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context101","getSushiswapConversionRate","_x158","_x159","_ref148","_callee102","tokenConfigFrom","tokenConfigDest","WETHAddr","_context102","_x160","_x161","_ref149","_callee103","_context103","addressForPrice","_x162","_x163","getCurveDepositedTokens","_ref150","_callee104","idleTokensBalances","remainingCurveTokens","_args104","_context104","_x164","getCurveUnevenTokenAmounts","_ref151","_callee105","amounts","max_burn_amount","unevenAmounts","_context105","getCurveDepositContract","_x165","_x166","_callee106","curveRatesInfo","_context106","strategyTokens","getCurveAPYContract","_callee107","blocksForPrevTokenPrice","_ref154","_ref155","prevTokenPrice","blocksMultiplier","curveAPR","_context107","getCurveTokenSupply","_callee108","_context108","getCurvePoolContract","_callee109","_args109","_context109","_callee110","_args110","_context110","_ref159","_callee111","_ref160","_ref161","_context111","_x167","_callee112","depositContractInfo","_context112","getCurveZapContract","_callee113","zapContractInfo","_context113","_callee114","poolContractInfo","_context114","getCurveSwapContract","_callee115","migrationContractInfo","_context115","getCurveIdleTokensAmounts","_callee117","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args117","_context117","_ref167","_callee116","coinIndex","curveIdleTokens","_context116","migrationParams","_x168","getCurveTokensAmounts","_callee119","useCoinIndex","_args119","_context119","_ref169","_callee118","_ref170","_ref171","idleTokenPrice","totalTokenSupply","_context118","_x169","getCurveAmounts","_ref172","_callee121","_args121","_context121","_ref173","_callee120","_context120","_x172","_x170","_x171","getCurveTokenAmount","_ref174","_callee122","_args122","_context122","_x173","getCurveSlippage","_ref175","_callee123","uneven_amounts","depositContract","_ref176","_ref177","virtualPrice","Sv","_args123","_context123","_x174","_x175","_ref178","_callee124","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref179","_ref180","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args124","_context124","protocol","IAaveIncentivesController","emissionPerSecond","_x176","_callee126","_args126","_context126","_ref182","_callee125","_ref183","_ref184","_context125","_x177","getWMaticApr","_ref185","_callee127","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args127","_context127","_x178","_x179","getStkAaveApr","_ref186","_callee128","aaveConversionRate","stkAaveAPR","stkAaveValue","_args128","_context128","_x180","_x181","getCompAPR","_ref187","_callee129","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args129","_context129","_x182","_x183","getCompSpeed","_ref188","_callee130","cTokenAddress","compSpeed","_context130","_x184","_ref189","_callee131","cTokenInfo","compoundAllocationPerc","_ref190","_ref191","cTokenTotalSupply","compoundPoolShare","_args131","_context131","_x185","_callee133","_args133","_context133","_ref193","_callee132","_ref194","_ref195","_context132","_x186","_callee135","_args135","_context135","_ref197","_callee134","_ref198","_ref199","compApr","_context134","_x187","getTokensCsv","_callee138","csv","_context138","prototype","sum","pv","cv","avg","_ref201","_callee137","_context137","_ref202","_callee136","header","rows","aprAvg","scoreAvg","lastRow","_context136","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x189","_x188","_callee140","convertToken","_args140","_context140","_ref204","_callee139","compTokenBalance","_context139","_x190","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref205","_callee142","govTokensUserDistribution","_args142","_context142","_ref206","_callee141","_context141","_x192","_x191","_ref207","_callee144","govTokensDistribution","tokenGovTokens","_args144","_context144","_ref208","_callee143","govSpeed","_context143","_x194","_x193","_ref209","_callee146","_args146","_context146","_ref210","_callee145","_ref211","_ref212","_ref213","_ref214","cTokenConfig","_context145","aprTooltipMode","_x197","_x195","_x196","_callee148","_args148","_context148","_ref216","_callee147","govTokenBalance","tokenConversionRate","fromTokenConfig","_context147","_x198","getGovTokenConfigByAddress","_callee149","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args149","_context149","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref218","_callee151","govTokensAmounts","_context151","_ref219","_callee150","govTokenAddress","_context150","_x201","_x202","_x199","_x200","_callee154","govTokenConfigForced","_args154","_context154","_ref221","_callee153","_context153","_ref222","_callee152","_context152","_x204","_x205","_x203","_callee155","_args155","_context155","_callee156","_ref225","_ref226","gain","fees","_args156","_context156","_ref227","_callee157","_args157","_context157","_x206","getTotalTVL","_callee158","tokensTVL","_context158","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee162","_context162","_ref230","_callee161","_context161","_ref231","_callee160","oldTokenTVL","idleTokenName","_ref232","_ref233","_ref237","_ref238","oldTokenPrice","oldTotalSupply","_context160","showAUM","_ref234","_callee159","_ref235","_ref236","govTokenConversionRate","govTokenBalanceConverted","_context159","_x209","_x208","_x207","getSubstackLatestFeed","_callee163","endpointInfo","idleSubstackFeed","latestFeed","_context163","getAggregatedStats","_callee164","tvls","totalAUM","_args164","_context164","getAggregatedStats_chain","_callee168","avgAPR","_args168","_context168","_ref242","_callee167","_context167","_ref243","_callee166","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context166","_ref244","_callee165","_ref245","_ref246","_context165","_x212","_x211","_x210","getTokenApy","_ref247","_callee169","_context169","_x213","getTokensToMigrate","_callee172","tokensToMigrate","_args172","_context172","_ref249","_callee171","_context171","_ref250","_callee170","_ref251","_context170","_x215","_x214","getProtocolsTokensBalances","_callee174","tokenBalances","minTokenBalance","protocolsTokens","_args174","_context174","_ref253","_callee173","tokenContract","_context173","_x216","_ref254","_callee175","_args175","_context175","_x217","_x218","_x219","getAvgAPYStats","_ref255","_callee176","apiResults","_args176","_context176","_x220","_x221","_ref256","_callee177","_conversionRate","ToTokenConfig","_args177","_context177","_x222","_x223","_ref257","_callee178","_ref258","_ref259","_context178","protocolScore","getTokenScoreApi","_x224","_x225","_ref260","_callee179","scores","_context179","_x226","_x227","_ref261","_callee182","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args182","_context182","_ref262","_callee181","addrIndex","protocolApr","protocolApy","govTokenAPR","_context181","_ref263","_callee180","_context180","_x231","_x229","_x230","_x228","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Staking","contractInfo","selectedOption","toolProps","SelectedComponent","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","rewardTokenPrice","tokenWrapperProps","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","stakedTokensLog","_this5","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","fromBlock","toBlock","etherscanRewardsTxs","tokenTotalSupply","tokenUserBalance","lockedInfo","claimable","claimableRewards","claimEvents","checkpointEvents","depositEvents","totalClaimed","event","claimedAmount","returnValues","userDeposited","stakeStartTime","stakedTime","ts","depositValue","latestCheckpoint","lastCheckpointTime","time","stakePeriod","currentProfit","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","CustomField","componentHasChildren","fieldType","fieldPath","Image","CustomList","rowsPerPage","processedRows","processRows","totalRows","paginationEnabled","rowIndex","PortfolioDonut","totalFunds","parentWidth","loadPortfolio","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","TotalEarningsCounter","loadTotalEarnings","counterStyle","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","aggregatedValues","remainingTokens","portfolioLoaded","availableGovTokens","polygonTransactions","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","polygonTransactionsAvailableTokens","availableTokensChanged","polygonBridgeConfig","statusColors","statusIcon","statusColor","portfolioCoverage","statusIconProps","batchInfo","redeemable","actionIcon","actionIconProps","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","enabledGovTokens","src_TotalBalanceCounter_TotalBalanceCounter","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","goToSection","route","h4","desc","visible","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","canDeposit","claim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","isETH","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","isDeposit","isWithdraw","BuyModal","showInline","availableMethods","buyToken","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","loadContracts","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","recipient","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","encodeParameters","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","COMP","stkAAVE","aToken","WMATIC","ERC20","137","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","useInfuraProvider","RootChainManager","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","4","5","1337","80001","isForked","requiredConfirmations","accountBalanceMinimum","enabledNetworks","infura","REACT_APP_INFURA_KEY","polygon","baseUrl","networkPairs","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","polygonBridge","subComponent","StateSender","ChildERC20","stake","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","closeModal","goBack","resetModal","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","Tos","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","isSafeApp","checkSafeApp","activate","getAccount","getSafeInfo","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","ModalCard","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","checkNetwork","accountBalanceToken","checkPreflight","isSupportedNetwork","networkInitialized","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","initContractCustomProvider","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","library","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getNetworkType","currentNetworkChanged","requiredNetworkChanged","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","transactionHashCallback","errorCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","sendTransaction","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","anonymous","indexed","govTokensDisabled","defiPrime","IdleTokenV4","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.ea863bcf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? <Text {...fieldProps}>-</Text> : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenConfig.address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const currentNetworkId = this.getRequiredNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTxs(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    // if (tokenSymbol === 'USDC'){\n    //   debugger;\n    // }\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEthereumTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // console.log('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // console.log('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // console.log('processStoredTxs',txHash,realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].name;\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi, web3Provider=null) => {\n    web3Provider = web3Provider || this.props.web3;\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n          case 'WMATIC':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n          case 'WMATIC':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.cachedContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.cachedContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.cachedContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenTotalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    if (!this.BNify(totalSupply).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n    }\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n    const cachedDataKey = `cachedContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution_2',aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution_3',IAaveIncentivesController_name,aTokenTotalSupply,assetData,tokenAllocation);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution_4',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n        case 'WMATIC':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n        case 'WMATIC':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              case 'WMATIC':\n                govTokenAPR = await this.getWMaticApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled && typeof this.props.getPermitTransactionParams === 'function'){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, this.props.contractInfo.name);\n      console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams,\n        contractName\n      } = params;\n\n      const value = params.value || null;\n      contractName = contractName || this.props.contractInfo.name;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (this.props.contractInfo.address){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      // console.log('contractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:7,\n        type:'day',\n        label:'1 week'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(7,'day') : this.functionsUtil.strToMoment().add(7,'day');\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    // const isDebug = window.location.hash.includes(\"debug=1\");\n\n    if (!this.props.account){\n      // if (isDebug){\n      //   alert(`loadStats: !account=${this.props.account}`)\n      // }\n      return false;\n    }\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      tokenUserBalance,\n      lockedInfo,\n      claimable,\n      claimableRewards,\n      claimEvents,\n      checkpointEvents,\n      depositEvents,\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}})\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('YYYY-MM-DD HH:mm')\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Locked Funds',\n      value:this.functionsUtil.formatMoney(totalDeposits,4)+' '+this.props.selectedToken\n    });\n\n    tokenTotalSupply = this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.contractInfo.decimals);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.selectedToken\n    });\n\n    stats.push({\n      title:'Claimable Rewards',\n      value:this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = totalClaimed.plus(claimableRewards);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.rewardToken}`,\n    });\n    \n    claimable = this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const lastCheckpointTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = lastCheckpointTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed());\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    // if (isDebug){\n    //   alert(`loadStats: statsLoaded=${statsLoaded}`);\n    // }\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    // console.log('updateData',selectedAction,newState);\n    // const isDebug = window.location.hash.includes(\"debug=1\");\n    // if (isDebug){\n    //   alert(`updateData: action=${selectedAction}, balanceProp=${newState.balanceProp.toFixed()}, contractInfo=${this.props.contractInfo.name}`);\n    // }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              py={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Hash\n                              </Text>\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( reward => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.amount}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {this.functionsUtil.shortenHash(reward.hash)}\n                                  </Text>\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    {\n                      (isIncrease && canIncrease) && (\n                        <Box\n                          mb={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Choose increase value:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AccessTime'}\n                              iconColor={'deposit'}\n                              iconBgColor={'#ced6ff'}\n                              isActive={ this.state.increaseAction === 'time' }\n                              handleClick={ e => this.setIncreaseAction('time') }\n                              text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                            />\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AttachMoney'}\n                              iconColor={'redeem'}\n                              iconBgColor={'#ceeff6'}\n                              isActive={ this.state.increaseAction === 'amount' }\n                              handleClick={ e => this.setIncreaseAction('amount') }\n                              text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                            />\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                        <Box\n                          width={1}\n                        > \n                          {\n                            (isLock || this.state.increaseAction === 'time') && (\n                              <Box\n                                width={1}\n                              >\n                                <Text mb={1}>\n                                  Choose lock period:\n                                </Text>\n                                {\n                                  !this.state.lockEndDateIsMaxEndDate ? (\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      flexDirection={'column'}\n                                    >\n                                      <Input\n                                        mb={2}\n                                        width={1}\n                                        type={\"date\"}\n                                        required={true}\n                                        height={'3.4em'}\n                                        borderRadius={2}\n                                        fontWeight={500}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        boxShadow={'none !important'}\n                                        value={this.state.lockPeriodInput || ''}\n                                        onChange={this.changelockPeriodInput.bind(this)}\n                                        border={`1px solid ${this.props.theme.colors.divider}`}\n                                      />\n                                      <Flex\n                                        mb={3}\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                        justifyContent={'space-between'}\n                                      >\n                                        {\n                                          this.state.lockPeriods.map( (p,index) => {\n                                            const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                            return (\n                                              <DashboardCard\n                                                cardProps={{\n                                                  p:2,\n                                                  width:0.24,\n                                                }}\n                                                isActive={isActive}\n                                                isInteractive={true}\n                                                key={`lockPeriod_${index}`}\n                                                handleClick={e => this.selectLockPeriod(p)}\n                                              >\n                                                <Text \n                                                  fontWeight={3}\n                                                  fontSize={[1,2]}\n                                                  textAlign={'center'}\n                                                  color={isActive ? 'copyColor' : 'cellText'}\n                                                >\n                                                  {p.label}\n                                                </Text>\n                                              </DashboardCard>\n                                            );\n                                          })\n                                        }\n                                      </Flex>\n                                      {\n                                        isIncrease && (\n                                          <ExecuteTransaction\n                                            params={[]}\n                                            {...this.props}\n                                            parentProps={{\n                                              width:1,\n                                              alignItems:'center',\n                                              justifyContent:'center'\n                                            }}\n                                            Component={Button}\n                                            componentProps={{\n                                              fontSize:3,\n                                              fontWeight:3,\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              borderRadius:4,\n                                              mainColor:'deposit',\n                                              value:'Increase Time',\n                                              disabled:this.state.buttonDisabled\n                                            }}\n                                            action={'Increase Time'}\n                                            methodName={'increase_unlock_time'}\n                                            contractName={this.props.contractInfo.name}\n                                            callback={this.transactionSucceeded.bind(this)}\n                                            getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                          />\n                                        )\n                                      }\n                                    </Flex>\n                                  ) : (\n                                    <IconBox\n                                      cardProps={{\n                                        mt:1,\n                                        mb:3\n                                      }}\n                                      icon={'Warning'}\n                                      iconProps={{\n                                        color:'cellText'\n                                      }}\n                                      text={`Your tokens are locked for the maxumum allowed period.`}\n                                    />\n                                  )\n                                }\n                              </Box>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                    {\n                      (isLock || this.state.increaseAction==='amount') ? (\n                        <SendTxWithBalance\n                          error={null}\n                          {...this.props}\n                          action={txAction}\n                          steps={this.state.steps}\n                          infoBox={this.state.infoBox}\n                          tokenConfig={this.props.tokenConfig}\n                          tokenBalance={this.state.balanceProp}\n                          contractInfo={this.props.contractInfo}\n                          permitEnabled={this.state.permitEnabled}\n                          buttonDisabled={this.state.buttonDisabled}\n                          approveEnabled={this.state.approveEnabled}\n                          callback={this.transactionSucceeded.bind(this)}\n                          approveDescription={this.state.approveDescription}\n                          balanceSelectorInfo={this.state.balanceSelectorInfo}\n                          changeInputCallback={this.changeInputCallback.bind(this)}\n                          contractApproved={this.contractApprovedCallback.bind(this)}\n                          getTransactionParams={this.getTransactionParams.bind(this)}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                {\n                                  (isLock || isIncrease) ? (\n                                    `You don't have any ${this.props.selectedToken} in your wallet.`\n                                  ) : isUnstake && (\n                                    `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                  )\n                                }\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        </SendTxWithBalance>\n                      ) : (isIncrease && !canIncrease) ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'LockOpen'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You cannot increase an expired lock, please Withdraw.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : isUnstake ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            this.state.lockExpired ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock has expired, you can withdraw your {this.props.selectedToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                    value:'Withdraw',\n                                  }}\n                                  action={'Withdraw'}\n                                  methodName={'withdraw'}\n                                  contractName={this.props.contractInfo.name}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : isClaim && (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim {this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      )\n                    }\n                  </Box>\n                ) : !this.props.account ? (\n                  <ConnectBox\n                    {...this.props}\n                  />\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    polygonTransactions:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n    polygonTransactionsAvailableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio,\n        polygonTransactions\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Get Polygon deposits\n        polygonBridgeConfig.enabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.polygonTransactions = polygonTransactions && polygonTransactions.length>0 ? polygonTransactions : null;\n      if (newState.polygonTransactions){\n        newState.polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n          let actionIcon = null;\n          switch (tx.action){\n            default:\n            case 'Deposit':\n              actionIcon = 'ArrowDownward';\n            break;\n            case 'Withdraw':\n              actionIcon = 'ArrowUpward';\n            break;\n            case 'Exit':\n              actionIcon = 'Undo';\n            break;\n          }\n          const depositInfo = {\n            actionIcon,\n            amount:tx.value,\n            token:tx.tokenSymbol,\n            action:tx.action.toUpperCase(),\n            bridgeType:tx.bridgeType.toUpperCase(),\n            status:tx.included ? 'Completed' : 'pending',\n            hash:this.functionsUtil.shortenHash(tx.hash),\n            statusIcon:tx.included ? 'Done' : 'Timelapse',\n            actionIconProps:{\n              color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n              bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n            },\n            url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n            date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n            statusIconProps:{\n              color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n            },\n            tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n          };\n          return depositInfo;\n        });\n      }\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n    const enabledGovTokens = Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(currentNetworkId)) );\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && enabledGovTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={enabledGovTokens}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.polygonTransactions && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <Title my={[3,4]}>Polygon Bridge Transactions</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <CustomList\n                        paginationEnabled={true}\n                        handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n                        cols={[\n                          {\n                            title:'HASH',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.18],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'bgIcon',\n                                path:['actionIcon'],\n                              },\n                              {\n                                type:'text',\n                                path:['hash'],\n                                props:{\n                                  ml:[0,2]\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'ACTION',\n                            props:{\n                              width:[0.25,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['action'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'DATE',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['date'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'BRIDGE',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.12],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['bridgeType'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'AMOUNT',\n                            props:{\n                              width:[0.25, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['amount'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.25,0.13]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['tokenIcon'],\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','1.6em']\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                              }\n                            ]\n                          },\n                        ]}\n                        {...this.props}\n                        rows={this.state.polygonTransactionsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\n// import DummyERC20 from '../abis/polygon/DummyERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      availableNetworks:[1,42,1337],\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      availableNetworks:[1,42,1337],\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[1,42,1337],\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    }\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      availableNetworks:[1,5,42,137,80001],\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      availableNetworks:[1,42],\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      availableNetworks:[1,42],\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    availableNetworks:[1,42],\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        name:'Matic',\n        version:'v1',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Mainnet',\n      },\n      5:{\n        name:'Görli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    enabledNetworks:[1,137],\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://rpc-mainnet.matic.network'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        key:env.REACT_APP_ETHERSCAN_KEY,\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].name.toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      subComponent:PolygonBridge,\n      availableNetworks:[1,5,137,80001],\n      label:'Ethereum <> Polygon Bridge',\n      image:'images/protocols/polygon.svg',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:null,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:null,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      availableNetworks:[1],\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      availableNetworks:[1],\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      availableNetworks:[1],\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      icon:'FileDownload',\n      depositEnabled:false,\n      availableNetworks:[1],\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      route:'convert',\n      icon:'SwapHoriz',\n      availableNetworks:[1],\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      availableNetworks:[1],\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      availableNetworks:[1,5,42],\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC','MATIC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR','MATIC'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','MATIC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have enough ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.isSafeApp = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      this.isSafeApp = await this.provider.isSafeApp();\n      return this.isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      chainId: defaultNetwork, // default: 1\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  maticPOSClient :{},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  checkNetwork: () => {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  networkInitialized:false,\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  initContractCustomProvider: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged();\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  handleNetworkChanged = async () => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(() => {\n      this.setState({\n        networkInitialized:false\n      },() => {\n        this.checkNetwork();\n      });\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    // this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n\n    // if (!networkId){\n    //   return false;\n    // }\n\n    const networkConfig = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n\n    // console.log('initWeb3',this.state.network.current.id,networkId,provider,web3Rpc,useWeb3Provider);\n\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3Rpc;\n        forceCallback = true;\n      }\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      // if (this.state.networkInitialized && connectorName !== 'Infura'){\n      //   this.props.setConnector('Infura',null);\n      // }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractCustomProvider = async (name, address, abi, web3Provider) => {\n    web3Provider = web3Provider || this.state.web3;\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    // console.log('initAccount',account);\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        // console.log('initAccount, wallets',wallets);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount 2',walletProvider,account);\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else if (walletProvider === 'Infura') {\n        return this.setState({\n          accountInizialized: true,\n          account:this.props.currentProvider,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.required.id]);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        const useInfuraProvider = !!contractInfo.useInfuraProvider;\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    // if (!networkId || !globalConfigs.network.availableNetworks[networkId]){\n    //   return null;\n    // }\n\n    let networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n\n    return {\n      id: networkId,\n      name: networkName\n    };\n  }\n\n  getCurrentNetwork = async (networkId=null) => {\n\n    const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n    networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n    const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n    return {\n      id:networkId,\n      name:networkName\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n    \n    // console.log('checkNetwork',this.state.networkInitialized,currentNetworkChanged,requiredNetworkChanged,network,this.state.network);\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null, send_raw=false, raw_tx_data=null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    if (typeof contract.methods[contractMethod] === 'undefined'){\n      if (typeof callback === 'function') {\n        callback(null,'method_not_found');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      const transactionHashCallback = hash => {\n        this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n        if (!hash){\n          this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n          return false;\n        }\n\n        transaction.transactionHash = hash;\n        transaction.status = \"pending\";\n        transaction.recentEvent = \"transactionHash\";\n        this.updateTransaction(transaction);\n\n        if (callback_receipt){\n          callback_receipt(transaction);\n        }\n\n        // Wait for manual confirmation only for mobile\n        if (this.props.isMobile){\n          if (manualConfirmationTimeoutId){\n            window.clearTimeout(manualConfirmationTimeoutId);\n          }\n          manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n        }\n      };\n\n      const errorCallback = error => {\n        // console.log('Tx error',error);\n        \n        const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n        \n        // Set error on transaction\n        transaction.status = \"error\";\n        transaction.recentEvent = \"error\";\n        this.updateTransaction(transaction);\n\n\n        // Show ToastProvider\n        if (!isDeniedTx){\n          window.toastProvider.addMessage(\"Something went wrong\", {\n            icon: 'Block',\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\",\n            colorTheme: 'light',\n            secondaryMessage: \"Please retry\",\n          });\n\n          const isError = error instanceof Error;\n\n          if (typeof error.message !== 'undefined'){\n            this.openTransactionErrorModal(null,error.message);\n          } else if (this.functionsUtil.checkUrlOrigin() && isError){\n            Sentry.captureException(error);\n          }\n        }\n\n        if (typeof callback === 'function') {\n          callback(transaction,error);\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      // console.log('send_raw',send_raw,{\n      //   from:account,\n      //   data:raw_tx_data,\n      //   to:contract._address\n      // });\n      if (send_raw && raw_tx_data){\n        return this.state.web3.eth.sendTransaction({\n            from:account,\n            data:raw_tx_data,\n            to:contract._address\n          })\n          .on(\"transactionHash\", transactionHashCallback)\n          .on(\"receipt\", receiptCallback)\n          .on(\"confirmation\", confirmationCallback)\n          .on(\"error\", errorCallback);\n      } else {\n        // estimate gas price\n        let gas = await contract.methods[contractMethod](...params)\n          .estimateGas(value ? { from: account, value } : { from: account })\n          .catch(e => console.error(e));\n\n        if (gas) {\n          gas = this.functionsUtil.BNify(gas);\n          gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n          // Check if gas is under the gasLimit param\n          if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n            gas = this.functionsUtil.BNify(gasLimit);\n          }\n\n          // Convert gasLimit toBN with web3 utils\n          gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n        }\n\n        return contract.methods[contractMethod](...params)\n          .send(value ? { from: account, value, gas } : { from: account, gas })\n          .on(\"transactionHash\", transactionHashCallback)\n          .on(\"receipt\", receiptCallback)\n          .on(\"confirmation\", confirmationCallback)\n          .on(\"error\", errorCallback);\n      }\n\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.state.network.current.id;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Polygon:null,\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    networkInitialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    checkNetwork: this.checkNetwork,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    initContractCustomProvider: this.initContractCustomProvider,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('CACHE DATA',key,Date.now());\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    // console.log('requiredNetwork',requiredNetwork);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        maticPOSClient,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      web3Infura={web3Infura}\n                                      web3Polygon={web3Polygon}\n                                      initAccount={initAccount}\n                                      checkNetwork={checkNetwork}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      maticPOSClient={maticPOSClient}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      networkInitialized={networkInitialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                      initContractCustomProvider={initContractCustomProvider}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          web3Infura={web3Infura}\n                                          web3Polygon={web3Polygon}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          checkNetwork={checkNetwork}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          networkInitialized={networkInitialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n"],"sourceRoot":""}